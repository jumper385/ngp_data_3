{"version":3,"sources":["components/forms/SchemaFormV2Components/InputBase.js","components/forms/SchemaFormV2Components/TextInput.js","components/forms/SchemaFormV2Components/RangeInput.js","components/forms/SchemaFormV2Components/StyledFormSubmit.js","components/forms/SchemaFormV2Components/StyledForm.js","components/forms/SchemaFormV2Components/NumberInput.js","components/forms/SchemaFormV2.js","components/buttons/RecordingButtonV2.js","pages/Recording.js","pages/Food.js","navBar/FixedNavBar.js","pages/Context.js","serverSocket.js","App.js","serviceWorker.js","index.js"],"names":["StyledInputComponent","styled","div","StyledTextInput","input","TextInput","props","className","label","type","value","onChange","name","placeholder","hint","StyledRangeInput","RangeInput","min","max","StyledFormSubmit","disabled","StyledForm","form","StyledNumberInput","NumberInput","Input","useState","state","setState","useEffect","resetForm","payload","readyToReset","readyToChange","e","target","SchemaFormV2","schema","readyToSubmit","onReadyForm","newPayload","onSubmit","preventDefault","map","obj","index","key","RecordingButton","button","RatingSchema","SymptomSchema","pain","bloating","constipation","custom","Recording","isDetailed","isRecording","pressCount","readyToRecord","newSymptomSubmission","onRecordingSubmit","symptom","prevSymptom","newRatingSubmission","onRatingSubmit","rating","recordingPaused","symptomChange","recordingChange","onRecordingPress","hardwareRecordingNumber","changeHardwareRecordingNumber","symptomShortcutSubmit","newSymptom","timestamp","Date","style","textAlign","color","onClick","console","log","recordingId","Object","keys","object","detailedName","generateComplexSelections","Food","food","FixedNav","nav","FixedNavBar","exact","to","Schema","Context","socket","openSocket","GlobalStyle","createGlobalStyle","App","marginBottom","serverTime","path","emit","ratings","foods","context","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e38ae2b.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledInputComponent = styled.div`\r\n    -webkit-appearance: none;\r\n    border:none;\r\n    display:block;\r\n    font-family:sans-serif;\r\n    width:100%;\r\n    margin:15pt auto;\r\n    box-sizing:border-box;\r\n    \r\n    & .inputLabel {\r\n        margin:0;\r\n        font-size:12pt;\r\n        font-weight:bold;\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n    & .inputHint {\r\n        margin:0;\r\n        font-size:9pt;        \r\n        color:rgba(0,0,0,.18);\r\n        font-weight:bold;\r\n    }\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledTextInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const TextInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledTextInput \r\n                type='text' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react'\r\nimport { StyledInputComponent } from './InputBase'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input`\r\n    width:100%;\r\n    -webkit-appearance: none;\r\n    margin: 12pt 0;\r\n\r\n    &::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:12pt;\r\n        width:12pt;\r\n        border-radius:6pt;\r\n        background:#2ecc71;\r\n        margin-top:-5pt;\r\n    }\r\n\r\n    &::-webkit-slider-runnable-track {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:2pt;\r\n        background:rgba(0,0,0,.09);\r\n        border-radius:1pt;\r\n    }\r\n`\r\n\r\nexport const RangeInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label} (low:{props.min} - high:{props.max}) - {props ? props.value || 'No Rating Yet...': 'No Rating...'}</p>\r\n            <StyledRangeInput\r\n                type='range' \r\n                value={props.value} \r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                min={props.min}\r\n                max={props.max}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react' \r\nimport styled from 'styled-components'\r\n\r\nexport const StyledFormSubmit = styled.input`\r\n    margin:0;\r\n    -webkit-appearance: none;\r\n    width:100%;\r\n    height:36pt;\r\n    margin:0;\r\n    border:none;\r\n    border-radius:6pt;\r\n    background:${props => props.disabled ? '#bdc3c7' : '#2ecc71'};\r\n    font-weight:bold;\r\n    color:white;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledForm = styled.form`\r\n    padding:0 12pt;\r\n    box-sizing:border-box;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledNumberInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const NumberInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledNumberInput \r\n                type='number' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { TextInput } from '../forms/SchemaFormV2Components/TextInput'\r\nimport { RangeInput } from '../forms/SchemaFormV2Components/RangeInput'\r\nimport { StyledFormSubmit } from './SchemaFormV2Components/StyledFormSubmit'\r\nimport { StyledForm } from './SchemaFormV2Components/StyledForm'\r\nimport { NumberInput } from '../forms/SchemaFormV2Components/NumberInput'\r\n\r\nconst Input = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.resetForm == true){\r\n            setState({...state, payload:{}, readyToReset:false})\r\n        }\r\n        if(state.readyToChange && props.onChange){\r\n            props.onChange(state.payload)\r\n            setState({...state, readyToChange:false})\r\n        }\r\n    })\r\n\r\n    const onChange = e => {\r\n        const payload = {[e.target.name]:e.target.value}\r\n        setState({...state, ...{payload:payload}, readyToChange:true})\r\n    }\r\n    \r\n    switch(props.type){\r\n        case 'text':\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                hint={props.hint}\r\n            />)\r\n        case 'range':\r\n            return(<RangeInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        case 'number':\r\n            return(<NumberInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        default:\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n            />)\r\n    }\r\n}\r\n\r\nexport const SchemaFormV2 = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    let schema = props.schema || []\r\n\r\n    useEffect(() => {\r\n        if(state.readyToSubmit === true){\r\n            if(props.onReadyForm){\r\n                props.onReadyForm(state.payload)\r\n            }\r\n            setState({...state, readyToSubmit:false})\r\n            resetForm()\r\n        }\r\n        if(state.readyToChange === true){\r\n            setState({...state, readyToChange:false})\r\n        }\r\n        if(state.readyToReset === true){\r\n            setState({...state, readyToReset:false})\r\n        }\r\n    })\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setState({...state, readyToSubmit:true})\r\n    }\r\n\r\n    const onChange = e => {\r\n        let newPayload = {...state.payload, ...e}\r\n        setState({...state, payload:newPayload, readyToChange:true})\r\n    }\r\n\r\n    const resetForm = e => {\r\n        setState({readyToReset:true})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <StyledForm onSubmit={onSubmit}>\r\n                {schema.map((obj, index) => {\r\n                    return <Input {...obj} onChange={onChange} key={index} resetForm={state.readyToReset}/>\r\n                })}\r\n                <StyledFormSubmit disabled={state.payload ? false : true} type='submit'/>\r\n            </StyledForm>\r\n        </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const RecordingButton = styled.button`\r\n    -webkit-appearance:none;\r\n    border:none;\r\n    height:32pt;\r\n    display:block;\r\n    margin:0 auto;\r\n    border-radius:16pt;\r\n    padding:0 24pt;\r\n    font-weight:bold;\r\n    background:rgb(245,245,245);\r\n    margin-top:32pt;\r\n    box-shadow: \r\n        -9px -9px 16px white,\r\n        9px 9px 16px #a3b1c6;\r\n    user-select: none;\r\n    color:#a3b1c6;\r\n    -webkit-touch-callout: none;\r\n    font-family:sans-serif\r\n    letter-spacing:0.15em;\r\n\r\n    :active {\r\n        box-shadow:     \r\n            inset -9px -9px 16px white,\r\n            inset 9px 9px 16px #a3b1c6;\r\n        color:white;\r\n    }\r\n\r\n    i {\r\n        font-size:28pt;\r\n        height:100%;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n\r\n        &.pause {\r\n            color:#f6e58d;\r\n        }\r\n\r\n        &.record {\r\n            color:#ff4757;\r\n        }\r\n\r\n        &.play { \r\n            color:#7bed9f;\r\n        }\r\n\r\n    }\r\n`","import React, {useState, useEffect} from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\nimport { RecordingButton } from '../components/buttons/RecordingButtonV2'\r\n\r\nconst RatingSchema = [\r\n    {type:'range', label:'Overall', name:'overall', min:0, max:10},\r\n    {type:'range', label:'Abdominal Pain', name:'abdPain', min:0, max:10},\r\n    {type:'range', label:'Bloating', name:'bloating', min:0, max:10},\r\n    {type:'range', label:'Wind', name:'wind', min:0, max:10},\r\n]\r\n\r\nconst SymptomSchema = {\r\n    pain:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    bloating:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    constipation:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    custom:[\r\n        {type:'text', label:'Symptom', name:'symptom'},\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n}\r\n\r\nconst Recording = props => {\r\n\r\n    let [state, setState] = useState({isDetailed:false, isRecording:false, pressCount:0, readyToRecord:false})\r\n\r\n    useEffect(() => {\r\n        if(state.newSymptomSubmission === true && props.onRecordingSubmit) {\r\n            props.onRecordingSubmit(state.symptom)\r\n            setState({...state, newSymptomSubmission:false, prevSymptom:state.symptom, symptom:{}})\r\n        }\r\n        if(state.newRatingSubmission === true){\r\n            if(props.onRatingSubmit){\r\n                props.onRatingSubmit(state.rating)\r\n            }\r\n            setState({...state, isRecording:false, newRatingSubmission:false, pressCount:0, recordingPaused:false, readyToRecord: false})\r\n        }\r\n        if(state.symptomChange === true){\r\n            setState({...state, symptomChange:false, readyToRecord:true})\r\n        }\r\n        if(state.recordingChange === true){\r\n            if(props.onRecordingPress){\r\n                props.onRecordingPress({...state, isRecording:state.isRecording, hardwareRecordingNumber:state.hardwareRecordingNumber})\r\n            }\r\n            setState({...state, recordingChange:false, readyToRecord: true})\r\n        }\r\n        if(state.changeHardwareRecordingNumber == true){\r\n            setState({...state, readyToRecord:true, changeHardwareRecordingNumber:false})\r\n        }\r\n    })\r\n\r\n    const changeRecording = () => {\r\n        setState({\r\n            pressCount:state.pressCount+1, \r\n            isRecording: state.isRecording ? false : true,\r\n            recordingChange:true,\r\n            hardwareRecordingNumber:state.hardwareRecordingNumber\r\n        })\r\n        console.log(state)\r\n    } \r\n\r\n    const ratingSubmit = e => {\r\n        if(e){\r\n            setState({...state, rating:{...e}, newRatingSubmission:true})\r\n        }\r\n    }\r\n\r\n    const symptomSubmit = e => {\r\n        if(e){\r\n            let newSymptom = {...state.symptom, ...e, timestamp:new Date()}\r\n            setState({...state, symptom:{...newSymptom}, newSymptomSubmission:true, isDetailed:false})\r\n        }\r\n    }\r\n\r\n    const symptomShortcutSubmit = name => {\r\n        let newSymptom = {symptom:name, timestamp: new Date()}\r\n        setState({...state, symptom:{...newSymptom}, newSymptomSubmission:true})\r\n    }\r\n\r\n    const generateComplexSelections = object => {\r\n        console.log(state, object)\r\n        if((state.detailedName === object) && (state.isDetailed === true)) {\r\n            setState({...state, isDetailed:false, detailedName:null})\r\n            return \r\n        }\r\n        setState({...state, symptom:{symptom:object}, isDetailed:true, detailedName:object, symptomChange:true})\r\n    }\r\n\r\n    const hardwareRecordingNumber = e => {\r\n        if(e) setState({...state, ...e, changeHardwareRecordingNumber:true})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Record Bowel Sounds</h1>\r\n\r\n            {(state.readyToRecord == true) ? \r\n            <RecordingButton onClick={changeRecording}>{state.isRecording ? \r\n                <i className=\"material-icons pause\">pause</i> :\r\n                (state.pressCount > 1) ? \r\n                <i className=\"material-icons play\">play_arrow</i> : \r\n                <i className=\"material-icons record\">fiber_manual_record</i>}\r\n            </RecordingButton> :\r\n            <SchemaFormV2 onReadyForm={hardwareRecordingNumber} schema={[{type:'number', label:'Hardware Recording Number', name:'hardwareRecordingNumber'}]} /> \r\n            }\r\n\r\n            <br />\r\n            {props.recordingId ? <p>{`Recording ID: ${props.recordingId}`}</p> : null}\r\n            <p style={{textAlign:'center'}}>{state.prevSymptom ? `${state.prevSymptom.symptom} was just added` : '...' }</p>\r\n            { (state.isRecording === true) ? \r\n                <div>\r\n                    <p>Simple Symptoms</p>\r\n                    <button onClick={e => symptomShortcutSubmit('burp')}>burp</button>\r\n                    <button onClick={e => symptomShortcutSubmit('fart')}>fart</button>\r\n                    <button onClick={e => symptomShortcutSubmit('gurgle')}>gurgle</button>\r\n                    <button onClick={e => symptomShortcutSubmit('urge to poo')}>urge to poo</button>\r\n                    <br />\r\n                    <p>Complex Symptoms</p>\r\n\r\n                    {Object.keys(SymptomSchema).map((object, index) => {\r\n                        return(\r\n                            <button key={object} onClick={() => generateComplexSelections(object)}>\r\n                                {object}\r\n                            </button>\r\n                        )\r\n                    })}\r\n\r\n                    {state.isDetailed ? <SchemaFormV2 onReadyForm={symptomSubmit} schema={SymptomSchema[state.detailedName]}/> : null}\r\n\r\n                </div> : \r\n                (state.pressCount > 1) ? <SchemaFormV2 onReadyForm={ratingSubmit} schema={RatingSchema}/> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recording","import React, { useState, useEffect } from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Food = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.onSubmit && state.readyToSubmit===true){\r\n            props.onSubmit(state.food)\r\n            setState({readyToSubmit:false})\r\n        }\r\n\r\n    })\r\n\r\n    const onSubmit = e => {\r\n        if(e){\r\n            let newPayload = {...e, timestamp:new Date()}\r\n            setState({...state, food:newPayload, readyToSubmit:true})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Food</h1>\r\n            <SchemaFormV2 schema={[\r\n                {type:'text',name:'foodName',label:'Food Name'},\r\n                {type:'text',name:'components',label:'Food Components',hint:'e.g. Nuts, Pepper, Oil, Wheat'},\r\n            ]} onReadyForm={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Food","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FixedNav = styled.nav`\r\n    background:#f5f5f5\r\n    height:36pt;\r\n    position:fixed;\r\n    width:calc(100% - 24pt);\r\n    right:12pt;\r\n    bottom:12pt;\r\n    border-radius:18pt;\r\n    overflow:hidden;\r\n    box-sizing:border-box;\r\n    display:grid;\r\n    grid-template-columns:1fr 1fr 1fr 1fr;\r\n    box-shadow:0 9px 16px rgba(0,0,0,.18);\r\n    z-index:100;\r\n\r\n    & .navLink {\r\n        color:black;\r\n        font-size:18pt;\r\n        text-align:center;\r\n        text-decoration:none;\r\n        height:100%;\r\n        margin:0;\r\n        font-size:9pt;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    }\r\n\r\n    & .active {\r\n        background:#ff4757;\r\n        color:white;        \r\n    }\r\n`\r\n\r\nexport const FixedNavBar = props => {\r\n    return(\r\n        <FixedNav>\r\n            <NavLink exact className='navLink' to='/'><i className=\"material-icons\">home</i></NavLink>\r\n            <NavLink className='navLink' to='/recording'><i className='material-icons'>mic</i></NavLink>\r\n            <NavLink className='navLink' to='/addFood'><i className='material-icons'>fastfood</i></NavLink>\r\n            <NavLink className='navLink' to='/addContext'><i className='material-icons'>chrome_reader_mode</i></NavLink>\r\n        </FixedNav>\r\n    )\r\n}","import React from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Schema = [\r\n    {type:'range', label:'Bristol Poop Rating', name:'poop', min:1, max:7},\r\n    {type:'range', label:'Poop Size', name:'poopSize', min:0, max:10},\r\n    {type:'range', label:'Stress Level', name:'stress', min:0, max:10},\r\n    {type:'range', label:'Sleep (hrs)', name:'sleep', min:0, max:24},\r\n    {type:'range', label:'Energy Rating', name:'energy', min:0, max:10},\r\n    {type:'text', label:'Notes', name:'notes'}\r\n]\r\n\r\nconst Context = props => {\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Context</h1>\r\n            <SchemaFormV2 \r\n                schema={Schema}\r\n                onReadyForm={props.onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Context","import openSocket from 'socket.io-client'\r\nexport const socket = openSocket('/')","import React, {useState, useEffect} from 'react';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Recording from './pages/Recording';\r\nimport Food from './pages/Food';\r\nimport { FixedNavBar } from './navBar/FixedNavBar';\r\nimport {createGlobalStyle} from 'styled-components'\r\nimport Context from './pages/Context';\r\nimport { socket } from './serverSocket';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none; \r\n    -ms-user-select: none; \r\n    user-select: none;\r\n  }\r\n  body { \r\n    & .App {\r\n      @import url('https://fonts.googleapis.com/css?family=Varela+Round&display=swap');\r\n      font-family: 'Varela Round', sans-serif;\r\n    }\r\n    background: #ecf0f1;\r\n  }\r\n`\r\n\r\nconst App = props => {\r\n\r\n  let [state, setState] = useState({})\r\n\r\n  const onSymptomSubmit = symptom => {\r\n    socket.emit('client/submit/symptom', symptom)\r\n  }\r\n\r\n  const onRecordingPress = e => {\r\n    socket.emit('client/recording/state', {...e, timestamp:new Date()})\r\n  }\r\n\r\n  const onRatingSubmit = ratings => {\r\n    socket.emit('client/submit/rating', {...ratings, timestamp:new Date()})\r\n  }\r\n\r\n  const onFoodSubmit = foods => {\r\n    socket.emit('client/submit/food', {...foods, timestamp:new Date()})\r\n  }\r\n\r\n  const onContextSubmit = context => {\r\n    socket.emit('client/submit/context', {...context, timestamp:new Date()})\r\n  }\r\n\r\n  return(\r\n    <Router>\r\n      <div className='App' style={{marginBottom:'64pt'}}>\r\n        <FixedNavBar />\r\n\r\n        <p>{state.serverTime}</p>\r\n\r\n        <Switch>\r\n\r\n          <Route exact path='/'>\r\n            <div>\r\n\r\n              <div>\r\n                <h1>Instructions on how to use this!!!</h1>\r\n                <h2>Navigation Buttons</h2>\r\n                <ul>\r\n                  <li><i className='material-icons'>home</i>: Home Page</li>\r\n                  <li><i className='material-icons'>mic</i>: Add a Recording</li>\r\n                  <li><i className='material-icons'>fastfood</i>: Add Food Log</li>\r\n                  <li><i className='material-icons'>chrome_reader_mode</i>: Add Context (e.g poop, energy and sleep)</li>\r\n                </ul>\r\n              </div>\r\n\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path='/recording'>\r\n            <Recording\r\n              onRecordingSubmit={onSymptomSubmit}\r\n              onRecordingPress={onRecordingPress}\r\n              onRatingSubmit={onRatingSubmit}\r\n            />\r\n          </Route>\r\n\r\n          <Route path='/addFood'>\r\n            <Food onSubmit={onFoodSubmit}/>\r\n          </Route>\r\n\r\n          <Route path='/addContext'>\r\n            <Context onSubmit={onContextSubmit}/>\r\n          </Route>\r\n\r\n        </Switch>\r\n        <GlobalStyle />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}