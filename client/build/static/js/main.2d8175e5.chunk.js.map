{"version":3,"sources":["instructions.md","components/forms/SchemaFormV2Components/InputBase.js","components/forms/SchemaFormV2Components/TextInput.js","components/forms/SchemaFormV2Components/RangeInput.js","components/forms/SchemaFormV2Components/StyledFormSubmit.js","components/forms/SchemaFormV2Components/StyledForm.js","components/forms/SchemaFormV2Components/NumberInput.js","components/forms/SchemaFormV2Components/DateTimeInput.js","components/forms/SchemaFormV2.js","components/buttons/RecordingButtonV2.js","components/notifications/snackbar.js","serverSocket.js","pages/Recording.js","pages/Food.js","navBar/FixedNavBar.js","pages/Context.js","pages/Home.js","components/forms/unifiedInput/formInputs.js","pages/pageBase.js","pages/loginPage/LoginV2.js","pages/recordingPage/PreRecordingPage.js","pages/recordingPage/complexSymptomForm.js","pages/recordingPage/DataCollection.js","pages/recordingPage/OverallRating.js","pages/recordingPage/RecordingV2.js","App.js","serviceWorker.js","store/recordingReducer.js","store/recordingReducerV2.js","store.js","index.js"],"names":["module","exports","StyledInputComponent","styled","div","StyledTextInput","input","TextInput","props","className","label","type","value","onChange","name","placeholder","hint","StyledRangeInput","RangeInput","min","max","StyledFormSubmit","disabled","StyledForm","form","StyledNumberInput","NumberInput","StyledDateTimeInput","DatetimeInput","substr","Date","Input","useState","state","setState","useEffect","resetForm","payload","readyToReset","readyToChange","e","target","SchemaFormV2","schema","readyToSubmit","onReadyForm","newPayload","onSubmit","preventDefault","map","obj","index","key","RecordingButton","button","SnackbarContainer","hidden","connect","data","currentRecording","symptomArray","slice","length","object","symptom","socket","openSocket","RatingSchema","RecordingNumberSchema","SymptomSchema","pain","bloating","constipation","custom","Food","dispatch","RESET","ADD_HARDWARE_RECORDING_NUMBER","CHANGE_RECORDING_STATE","ADD_SHORTCUT_SYMPTOM","EDIT_SYMPTOM","ADD_SYMPTOM","ADD_RATING","ADD_RECORDING_ID","console","log","on","recordingId","isReadyToRecord","onClick","isRecording","recordingClickCounter","currSymptom","isComplex","style","textAlign","food","color","FixedNav","nav","FixedNavBar","exact","to","Schema","Context","Home","getData","a","instructionPath","require","fetch","text","fetchedData","instructions","padding","source","StyledInput","VariableInputField","React","forwardRef","ref","extras","configs","options","display","alignItems","boxSizing","styling","inputConfig","error","SubmitButton","FormButtonContainer","PageBase","animated","ADD_JWT","ADD_USER_DETAILS","useForm","register","reset","watch","handleSubmit","errors","background","emit","maxWidth","margin","required","MOVE_PAGE","pageNumber","DEVICE_META","fadeIn","useSpring","from","opacity","transform","config","tension","Math","random","mass","friction","precision","p","recordingObject","shortid","generate","username","metaReducer","pattern","BubbleButton","REMOVE_COMPLEX_STATE","ADD_COMPLEX_SYMPTOM","defaultValues","severity","reduxPayload","recordingReducer","complexSymptomState","width","RecordButton","RecordingDisplay","SymptomContainerHolder","SymptomContainer","ADD_SIMPLE_SYMPTOM","START_RECORDING","STOP_RECORDING","ENTERING_COMPLEX_SYMPTOM","buttonAnimation","colorDarken","slideInTop","top","slideFromRight","right","complexSlideIn","left","startImmediately","lastUnit","start","pause","resume","paddingBottom","position","zIndex","Minutes","Seconds","bottom","fontSize","icon","faStop","faMicrophoneAlt","recordingid","RESET_RECORDING","SUBMIT_RATINGS","history","useHistory","overall","abdPain","wind","newRating","push","CONNECT_SOCKET","currentPage","GlobalStyle","createGlobalStyle","StyledAppDiv","RecordingStatusBar","recording","useCookies","response","loggedIn","path","RecordingV2","foods","timestamp","context","process","Boolean","window","location","hostname","match","defaultState","JWT","rootReducer","combineReducers","default","action","jwt","jwtData","verify","JWT_KEY","_doc","toLowerCase","hardwareRecordingNumber","recordingState","uploadPayload","newSymptom","symptomUpload","rating","recordingMeta","deviceNumber","newSimpleSymptom","newComplexSymptom","newOverall","overalls","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d8175e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instructions.b528d2d4.md\";","import styled from 'styled-components'\r\n\r\nexport const StyledInputComponent = styled.div`\r\n    -webkit-appearance: none;\r\n    border:none;\r\n    display:block;\r\n    font-family:sans-serif;\r\n    width:100%;\r\n    margin:15pt auto;\r\n    box-sizing:border-box;\r\n    \r\n    & .inputLabel {\r\n        margin:0;\r\n        font-size:12pt;\r\n        font-weight:bold;\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n    & .inputHint {\r\n        margin:0;\r\n        font-size:9pt;        \r\n        color:rgba(0,0,0,.18);\r\n        font-weight:bold;\r\n    }\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledTextInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const TextInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledTextInput \r\n                type='text' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react'\r\nimport { StyledInputComponent } from './InputBase'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input`\r\n    width:100%;\r\n    -webkit-appearance: none;\r\n    margin: 12pt 0;\r\n\r\n    &::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:12pt;\r\n        width:12pt;\r\n        border-radius:6pt;\r\n        background:#2ecc71;\r\n        margin-top:-5pt;\r\n    }\r\n\r\n    &::-webkit-slider-runnable-track {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:2pt;\r\n        background:rgba(0,0,0,.09);\r\n        border-radius:1pt;\r\n    }\r\n`\r\n\r\nexport const RangeInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label} (low:{props.min} - high:{props.max}) - {props ? props.value || 'No Rating Yet...': 'No Rating...'}</p>\r\n            <StyledRangeInput\r\n                type='range' \r\n                value={props.value} \r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                min={props.min}\r\n                max={props.max}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const StyledFormSubmit = styled.input`\r\n    margin:0;\r\n    -webkit-appearance: none;\r\n    width:100%;\r\n    height:36pt;\r\n    margin:0;\r\n    border:none;\r\n    border-radius:6pt;\r\n    background:${props => props.disabled ? '#bdc3c7' : '#2ecc71'};\r\n    font-weight:bold;\r\n    color:white;\r\n`","import styled from 'styled-components'\r\n\r\nexport const StyledForm = styled.form`\r\n    padding:0 12pt;\r\n    box-sizing:border-box;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledNumberInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const NumberInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledNumberInput \r\n                type='number' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledDateTimeInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const DatetimeInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledDateTimeInput \r\n                type='datetime-local' \r\n                value={props ? props.value.substr(0,16) || new Date() : new Date() }\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { TextInput } from '../forms/SchemaFormV2Components/TextInput'\r\nimport { RangeInput } from '../forms/SchemaFormV2Components/RangeInput'\r\nimport { StyledFormSubmit } from './SchemaFormV2Components/StyledFormSubmit'\r\nimport { StyledForm } from './SchemaFormV2Components/StyledForm'\r\nimport { NumberInput } from '../forms/SchemaFormV2Components/NumberInput'\r\nimport { DatetimeInput } from './SchemaFormV2Components/DateTimeInput'\r\n\r\nconst Input = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.resetForm === true){\r\n            setState({...state, payload:{}, readyToReset:false})\r\n        }\r\n        if(state.readyToChange && props.onChange){\r\n            props.onChange(state.payload)\r\n            setState({...state, readyToChange:false})\r\n        }\r\n    }, [state, props])\r\n\r\n    const onChange = e => {\r\n        const payload = {[e.target.name]:e.target.value}\r\n        setState({...state, ...{payload:payload}, readyToChange:true})\r\n    }\r\n    \r\n    switch(props.type){\r\n        case 'text':\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                hint={props.hint}\r\n            />)\r\n        case 'range':\r\n            return(<RangeInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        case 'number':\r\n            return(<NumberInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        case 'time':\r\n            return(<DatetimeInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                hint={props.hint}\r\n            />)\r\n        default:\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n            />)\r\n    }\r\n}\r\n\r\nexport const SchemaFormV2 = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    let schema = props.schema || []\r\n\r\n    useEffect(() => {\r\n        if(state.readyToSubmit === true){\r\n            if(props.onReadyForm){\r\n                props.onReadyForm(state.payload)\r\n            }\r\n            setState({...state, readyToSubmit:false})\r\n            resetForm()\r\n        }\r\n        if(state.readyToChange === true){\r\n            setState({...state, readyToChange:false})\r\n        }\r\n        if(state.readyToReset === true){\r\n            setState({...state, readyToReset:false})\r\n        }\r\n    }, [state, props])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setState({...state, readyToSubmit:true})\r\n    }\r\n\r\n    const onChange = e => {\r\n        let newPayload = {...state.payload, ...e}\r\n        setState({...state, payload:newPayload, readyToChange:true})\r\n    }\r\n\r\n    const resetForm = e => {\r\n        setState({readyToReset:true})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <StyledForm onSubmit={onSubmit}>\r\n                {schema.map((obj, index) => {\r\n                    return <Input {...obj} onChange={onChange} key={index} resetForm={state.readyToReset}/>\r\n                })}\r\n                <StyledFormSubmit disabled={state.payload ? false : true} type='submit'/>\r\n            </StyledForm>\r\n        </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const RecordingButton = styled.button`\r\n    -webkit-appearance:none;\r\n    border:none;\r\n    height:32pt;\r\n    display:block;\r\n    margin:0 auto;\r\n    border-radius:16pt;\r\n    padding:0 24pt;\r\n    font-weight:bold;\r\n    background:rgb(245,245,245);\r\n    margin-top:32pt;\r\n    box-shadow: \r\n        -9px -9px 16px white,\r\n        9px 9px 16px #a3b1c6;\r\n    user-select: none;\r\n    color:#a3b1c6;\r\n    -webkit-touch-callout: none;\r\n    font-family:sans-serif\r\n    letter-spacing:0.15em;\r\n\r\n    :active {\r\n        box-shadow:     \r\n            inset -9px -9px 16px white,\r\n            inset 9px 9px 16px #a3b1c6;\r\n        color:white;\r\n    }\r\n\r\n    i {\r\n        font-size:28pt;\r\n        height:100%;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n\r\n        &.pause {\r\n            color:#f6e58d;\r\n        }\r\n\r\n        &.record {\r\n            color:#ff4757;\r\n        }\r\n\r\n        &.play { \r\n            color:#7bed9f;\r\n        }\r\n\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\n\r\nconst SnackbarContainer = styled.div`\r\n    position:fixed;\r\n    bottom:0pt;\r\n    width:100vw\r\n    background:rgba(0,0,0,.18);\r\n    display:${props => props.hidden ? 'none' : null }\r\n`\r\n\r\nconst Snackbar = props => {\r\n\r\n    let data = (props.currentRecording && props.currentRecording.symptomArray) ? props.currentRecording.symptomArray : null\r\n\r\n    return(\r\n        <SnackbarContainer hidden={false}>\r\n            {\r\n                (data == null) ? \r\n                null : data.slice((data.length > 3) ? -3 : -data.length).map((object, index) => {\r\n                if(object != null) {return <p key={index}>({data.length-index}) - {object.symptom}</p>}\r\n                else return null\r\n                })\r\n            }\r\n        </SnackbarContainer>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n})\r\n\r\nexport default connect(mapStateToProps)(Snackbar)","import openSocket from 'socket.io-client'\r\nexport const socket = openSocket(\r\n    (process.env.NODE_ENV === 'development') ? 'localhost:8080' : '/'\r\n)","import React from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\nimport { RecordingButton } from '../components/buttons/RecordingButtonV2'\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '../components/notifications/snackbar'\r\nimport { socket } from '../serverSocket'\r\n\r\nconst RatingSchema = [\r\n    {type:'range', label:'Overall', name:'overall', min:0, max:10},\r\n    {type:'range', label:'Abdominal Pain', name:'abdPain', min:0, max:10},\r\n    {type:'range', label:'Bloating', name:'bloating', min:0, max:10},\r\n    {type:'range', label:'Wind', name:'wind', min:0, max:10},\r\n]\r\n\r\nconst RecordingNumberSchema = [\r\n    {type:'number', label:'Hardware Recording Number', name:'hardwareRecordingNumber', hint:'This NUMBER is displayed on the recording device\\'s screen'}\r\n]\r\n\r\nconst SymptomSchema = {\r\n    pain:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    bloating:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    constipation:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    custom:[\r\n        {type:'text', label:'Symptom', name:'symptom'},\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n}\r\n\r\nconst Recording = props => {\r\n    console.log(props)\r\n\r\n    socket.on('res@client/recording/state', data => {\r\n        console.log(data)\r\n        props.ADD_RECORDING_ID(data.recordingId)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar />\r\n            {props.isReadyToRecord ? \r\n                <RecordingButton onClick={props.CHANGE_RECORDING_STATE}>{\r\n                    props.isRecording ? 'Pause Logging' : props.recordingClickCounter > 1 ? 'Resume Logging' : 'Start Logging'\r\n                }</RecordingButton> :\r\n                <SchemaFormV2 onReadyForm={props.ADD_HARDWARE_RECORDING_NUMBER} schema={RecordingNumberSchema}/>\r\n            }\r\n            <p>{props.symptomArray ? \r\n            `\"${props.symptomArray[props.symptomArray.length-1].symptom}\" was added at ${new Date()}` : \r\n            props.isRecording ? 'no symptoms yet...' : null}</p>\r\n            <div>{props.isRecording ? \r\n                <div>\r\n                    <p>Simple Symptoms</p>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'burp'})}>burp</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'fart'})}>fart</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'gurgle'})}>gurgle</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'urge to poo'})}>urge to poo</button>\r\n                \r\n                    <p>Complex Symptoms</p>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'pain'})}>pain</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'bloating'})}>bloating</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'constipation'})}>constipation</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'custom'})}>custom</button>\r\n                    {(props.currSymptom && props.isComplex) ? \r\n                    <SchemaFormV2 onReadyForm={props.ADD_SYMPTOM} schema={SymptomSchema[props.currSymptom.symptom]}/> : \r\n                    null\r\n                    }\r\n                </div> : \r\n                props.isReadyToRecord ? \r\n                (props.recordingClickCounter > 1) ? \r\n                <div>\r\n                    <p style={{textAlign:'center'}}>Rate your overall feeling throughout this recording</p>\r\n                    <p style={{textAlign:'center'}}>When you've finished rating this recording, press the 'Submit' button to complete the recording</p>\r\n                    <SchemaFormV2 onReadyForm={e => {\r\n                        props.ADD_RATING(e)\r\n                        props.RESET()\r\n                    }} schema={RatingSchema}/>\r\n                </div> :\r\n                'not recording'\r\n                :\r\n                null\r\n            }</div>\r\n            <br />\r\n            {/* <button onClick={props.RESET}>RESET STATE - DEBUGGING</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.currentRecording\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    RESET: e => dispatch({type:'RESET'}),\r\n    ADD_HARDWARE_RECORDING_NUMBER: e => dispatch({type:'ADD_HARDWARE_RECORDING_NUMBER', payload:e}),\r\n    CHANGE_RECORDING_STATE: e => dispatch({type:'CHANGE_RECORDING_STATE'}),\r\n    ADD_SHORTCUT_SYMPTOM: e => dispatch({type:'ADD_SHORTCUT_SYMPTOM', payload:e}),\r\n    EDIT_SYMPTOM: e => dispatch({type:'EDIT_SYMPTOM', payload:e}),\r\n    ADD_SYMPTOM: e => dispatch({type:'ADD_SYMPTOM', payload:e }),\r\n    ADD_RATING: e => dispatch({type:'ADD_RATING', payload:e}),\r\n    ADD_RECORDING_ID: e => dispatch({type:'ADD_RECORDING_ID', payload:e})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recording)","import React, { useState, useEffect } from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Food = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.onSubmit && state.readyToSubmit===true){\r\n            props.onSubmit(state.food)\r\n            setState({readyToSubmit:false})\r\n        }\r\n\r\n    }, [props, state.readyToSubmit, state.food])\r\n\r\n    const onSubmit = e => {\r\n        if(e){\r\n            let newPayload = {...e}\r\n            setState({...state, food:newPayload, readyToSubmit:true})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Food</h1>\r\n            <SchemaFormV2 schema={[\r\n                {type:'text',name:'foodName',label:'Food Name'},\r\n                {type:'time',name:'timestamp',label:'Consumption Time',hint:'What time did you have it? - Click the white part... there\\'s a bug in iOS i cant fix...'},\r\n                {type:'text',name:'components',label:'Food Components',hint:'e.g. Nuts, Pepper, Oil, Wheat'},\r\n            ]} onReadyForm={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Food","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FixedNav = styled.nav`\r\n    background:#f5f5f5\r\n    height:36pt;\r\n    position:fixed;\r\n    width:calc(100% - 24pt);\r\n    right:12pt;\r\n    bottom:12pt;\r\n    border-radius:18pt;\r\n    overflow:hidden;\r\n    box-sizing:border-box;\r\n    display:grid;\r\n    grid-template-columns:1fr 1fr;\r\n    box-shadow:0 9px 16px rgba(0,0,0,.18);\r\n    z-index:100;\r\n\r\n    & .navLink {\r\n        color:black;\r\n        font-size:18pt;\r\n        text-align:center;\r\n        text-decoration:none;\r\n        height:100%;\r\n        margin:0;\r\n        font-size:9pt;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    }\r\n\r\n    & .active {\r\n        background:#ff4757;\r\n        color:white;        \r\n    }\r\n`\r\n\r\nexport const FixedNavBar = props => {\r\n    return(\r\n        <FixedNav>\r\n            <NavLink exact className='navLink' to='/'><i className=\"material-icons\">home</i></NavLink>\r\n            <NavLink className='navLink' to='/recording'><i className='material-icons'>mic</i></NavLink>\r\n            \r\n            {/*Temporarily Removed*/}\r\n            \r\n            {/* <NavLink className='navLink' to='/addFood'><i className='material-icons'>fastfood</i></NavLink>\r\n            <NavLink className='navLink' to='/addContext'><i className='material-icons'>chrome_reader_mode</i></NavLink> */}\r\n        </FixedNav>\r\n    )\r\n}","import React from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Schema = [\r\n    {type:'range', label:'Bristol Poop Rating', name:'poop', min:1, max:7},\r\n    {type:'range', label:'Poop Size', name:'poopSize', min:0, max:10},\r\n    {type:'range', label:'Stress Level', name:'stress', min:0, max:10},\r\n    {type:'range', label:'Sleep (hrs)', name:'sleep', min:0, max:24},\r\n    {type:'range', label:'Energy Rating', name:'energy', min:0, max:10},\r\n    {type:'text', label:'Notes', name:'notes'}\r\n]\r\n\r\nconst Context = props => {\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Context</h1>\r\n            <SchemaFormV2 \r\n                schema={Schema}\r\n                onReadyForm={props.onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Context","import React, {useState} from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst Home = props => {\r\n\r\n    const getData = async () => {\r\n        const instructionPath = require('../instructions.md')\r\n        const fetchedData = await (await fetch(instructionPath)).text()\r\n        setState({instructions:fetchedData})\r\n    }\r\n\r\n    let [state, setState] = useState({instructions:''})\r\n\r\n    getData()\r\n\r\n    return(\r\n        <div style={{padding:'0 12pt'}}>\r\n\r\n            <ReactMarkdown source={state.instructions}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.div`\r\n\r\n    width:100%;\r\n    font-size:9pt;\r\n    margin-top:18pt;\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    background:none;\r\n    border:none;\r\n\r\n    :first-of-type{\r\n        margin:none;\r\n    }\r\n\r\n    input, select {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        border:none;\r\n        background:none;\r\n        box-shadow:none;\r\n        display:flex;\r\n        align-items:center;\r\n        height:24pt;\r\n        width:100%;\r\n        border-radius:9pt;\r\n        padding: 0 9pt;\r\n        box-sizing:border-box;\r\n        border:solid 0.5px rgba(0,0,0,.12);\r\n\r\n        ::placeholder{\r\n            color:rgba(0,0,0,.12)\r\n        }\r\n    }\r\n\r\n    .range {\r\n\r\n        border:none;\r\n        \r\n        ::-webkit-slider-runnable-track{\r\n            -webkit-appearance: none;\r\n            height:2px;\r\n            border-radius:1px;\r\n            background:rgba(0,0,0,.24);\r\n            box-sizing:border-box;\r\n        }\r\n\r\n        ::-webkit-slider-thumb {\r\n            -webkit-appearance: none;\r\n            border:none;\r\n            background:linear-gradient(90deg, #241034 0%, #1C0638 100%);;\r\n            height:12pt;\r\n            width:12pt;\r\n            border-radius:50%;\r\n            margin-top:-5pt;\r\n            box-sizing:border-box;\r\n        }\r\n\r\n    }\r\n\r\n    .label {\r\n        margin-bottom:6pt;\r\n        padding-left:9pt;\r\n        text-transform:uppercase;\r\n\r\n        span {\r\n            color:red;\r\n        }\r\n    }\r\n\r\n    .hint {\r\n        padding-left: 9pt;\r\n        color:rgba(0,0,0,.24);\r\n        font-size:7pt;\r\n    }\r\n\r\n`\r\n\r\nconst VariableInputField = React.forwardRef((props, ref) => {\r\n\r\n    let { extras, type, ...configs} = props\r\n\r\n    switch (props.type) {\r\n\r\n        case 'select':\r\n            return (\r\n                <select ref={ref} {...configs} >\r\n                    {props.extras.options.map((object, index) => {\r\n                        return <option key={index} {...object}>{object.label}</option>\r\n                    })}\r\n                </select>\r\n            )\r\n\r\n        case 'range':\r\n            return (\r\n                <div style={{display:'flex', alignItems:'center', padding:'0 9pt', boxSizing:'border-box'}}>\r\n                    <p>{configs.min}</p>\r\n                    <input className='range' ref={ref} {...props} />\r\n                    <p>{configs.max}</p>\r\n                </div>\r\n            )\r\n\r\n        default:\r\n            return <input ref={ref} {...props} />\r\n\r\n    }\r\n})\r\n\r\nexport const TextInput = props => {\r\n\r\n    const { ref, ...inputConfig } = props.styling\r\n\r\n    return (\r\n        <StyledInput>\r\n            <label to={props.name}>\r\n    <p className='label'>{props.label} {props.error[inputConfig.name] && <span>~ {`${props.error[inputConfig.name].type}`}</span>} {props.value && `- ${props.value}`}</p>\r\n            </label>\r\n            <VariableInputField ref={ref} {...inputConfig} />\r\n            {props.hint && <p className='hint'>{props.hint}</p>}\r\n        </StyledInput>\r\n    )\r\n}\r\n\r\nexport const SubmitButton = styled.input`\r\n    border:none;\r\n    font-size:9pt;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    background: linear-gradient(90deg, #241034 0%, #1C0638 100%);\r\n    color:white;\r\n    padding:9pt 36pt;\r\n    border-radius:100vh;\r\n    text-align:center;\r\n    display:inline-block;\r\n    box-shadow: 0 0 9pt rgba(0,0,0,.12)\r\n`\r\n\r\nexport const FormButtonContainer = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { animated } from 'react-spring'\r\n\r\nexport const PageBase = styled(animated.div)`\r\n    min-height:100vh;\r\n    min-width:100vw;\r\n    overflow-x:hidden;\r\n    position:absolute; \r\n    top:0;\r\n    left:0;\r\n    box-sizing:border-box;\r\n    background:white;\r\n    padding: 0 24pt;\r\n\r\n    .pageHeading {\r\n        max-width:300pt;\r\n        margin:0 auto;\r\n        text-align:center;\r\n        display:flex;\r\n        flex-direction:column;\r\n        margin-top:72pt;\r\n        align-items:center;\r\n        margin-bottom:36pt;\r\n\r\n        .pageCategory {\r\n            text-transform: uppercase;\r\n            font-size:9pt;\r\n            font-weight:bold;\r\n            border:1pt solid rgba(0,0,0,.24);\r\n            margin:0 auto;\r\n            padding: 3pt 12pt;\r\n            border-radius:32pt;\r\n            color:rgba(0,0,0,.24);\r\n            margin-bottom:9pt;\r\n            display:inline-block;\r\n        }\r\n\r\n        .pageTitle { \r\n            font-size:24pt;\r\n            margin:0;\r\n            text-transform:uppercase;\r\n            color:rgba(0,0,0,.86);\r\n        }\r\n\r\n        .pageInstructions {\r\n            font-size:9pt\r\n            color:rgba(0,0,0,.86);\r\n            padding:0 12pt;\r\n            box-sizing:border-box;\r\n        }\r\n\r\n    }\r\n\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput, SubmitButton, FormButtonContainer } from '../../components/forms/unifiedInput/formInputs'\r\nimport { PageBase } from '../pageBase'\r\nimport { socket } from '../../serverSocket'\r\nconst LoginV2 = props => {\r\n\r\n    let { register, watch, reset, handleSubmit, errors } = useForm()\r\n\r\n    const onSubmit = e => {\r\n        // props.ADD_USER_DETAILS(e.username)\r\n        socket.emit('client/login/submit', e)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <PageBase style={{ background: 'white', padding: '0 32pt' }}>\r\n\r\n            <div className='pageHeading'>\r\n                <p className='pageCategory'>Authentication</p>\r\n                <p className='pageTitle'>Login</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto' }}>\r\n                <TextInput label='username' error={errors} styling={{\r\n                    name: 'username',\r\n                    type: 'text',\r\n                    placeholder: 'Enter a username...',\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='password' error={errors} styling={{\r\n                    name: 'password',\r\n                    type: 'password',\r\n                    placeholder: 'What was your password?',\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <br />\r\n\r\n                <FormButtonContainer>\r\n                    <SubmitButton type='submit' />\r\n                </FormButtonContainer>\r\n\r\n            </form>\r\n\r\n        </PageBase>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ADD_JWT: e => dispatch({type:\"ADD_JWT\", payload:e}),\r\n    ADD_USER_DETAILS: e => dispatch({type:'ADD_USER_DETAILS', payload:e})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginV2)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PageBase } from '../pageBase'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput, FormButtonContainer, SubmitButton } from '../../components/forms/unifiedInput/formInputs'\r\nimport { socket } from '../../serverSocket'\r\nimport shortid from 'shortid'\r\n\r\nconst PreRecordingPage = props => {\r\n\r\n    let { register, handleSubmit, reset, errors } = useForm()\r\n\r\n    const onSubmit = e => {\r\n\r\n        let recordingObject = {\r\n            recordingId: shortid.generate(),\r\n            ...e,\r\n            username: props.metaReducer.username\r\n        }\r\n\r\n        socket.emit('/clientv2/recording', recordingObject)\r\n\r\n        props.DEVICE_META(recordingObject)\r\n        props.MOVE_PAGE(1)\r\n        reset()\r\n    }\r\n\r\n    const fadeIn = useSpring({\r\n        from: { opacity: 0, transform: 'scale(0)' },\r\n        opacity: 1,\r\n        transform: 'scale(1)',\r\n        config: {\r\n            tension: 1000 + Math.random()*100,\r\n            mass: 0.25 + Math.random()*1,\r\n            friction: 10,\r\n            precision: 0.001\r\n        }\r\n    })\r\n\r\n    return (\r\n\r\n        <PageBase>\r\n\r\n            <div style={fadeIn} className='pageHeading'>\r\n                <animated.p style={fadeIn} className='pageCategory'>Recording - Step 1</animated.p>\r\n                <animated.p style={fadeIn} className='pageTitle'>Pre-Recording</animated.p>\r\n                <animated.p style={fadeIn} className='pageInstructions'>Before we begin, we'll need you to enter information about your device below. This will help narrow down which recording this data belongs to.</animated.p>\r\n            </div>\r\n\r\n            <animated.form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto', ...fadeIn}}>\r\n                \r\n                <TextInput label='Device Number' error={errors} styling={{\r\n                    name: 'deviceNumber',\r\n                    type: 'number',\r\n                    placeholder: 'Which device are you using right now?',\r\n                    ref: register({ required: true }),\r\n                    pattern:'[0-9]+',\r\n                }} hint='This is the number located on the back of your device' />\r\n\r\n                <TextInput label='Hardware Recording Number' error={errors} styling={{\r\n                    name: 'hardwareRecordingNumber',\r\n                    type: 'number',\r\n                    placeholder: 'What\\'s the recording number on the screen?',\r\n                    ref: register({ required: true }),\r\n                    pattern:'[0-9]+',\r\n                }} hint='This is the number located on the device display' />\r\n\r\n                <br />\r\n\r\n                <FormButtonContainer>\r\n                    <SubmitButton type='submit' />\r\n                </FormButtonContainer>\r\n\r\n            </animated.form>\r\n\r\n        </PageBase>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    MOVE_PAGE: pageNumber => dispatch({type:'MOVE_PAGE', payload:pageNumber}),\r\n    DEVICE_META: payload => dispatch({type:'DEVICE_META', payload:payload})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreRecordingPage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormButtonContainer, SubmitButton, TextInput } from '../../components/forms/unifiedInput/formInputs'\r\nimport { useForm } from 'react-hook-form'\r\nimport styled from 'styled-components'\r\n\r\nexport const BubbleButton = styled.button`\r\n    border:none;\r\n    font-size:9pt;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    color:rgba(0,0,0,.24);\r\n    background:none;\r\n    padding:9pt 36pt;\r\n    text-align:center;\r\n    display:inline-block;\r\n`\r\n\r\nconst ComplexSymptomForm = props => {\r\n\r\n    let { register, errors, handleSubmit, reset, watch} = useForm({\r\n        defaultValues:{severity:'0'}\r\n    })\r\n\r\n    const onSubmit = e => {\r\n\r\n        let reduxPayload = {\r\n            ...e, \r\n            username: props.metaReducer.username, \r\n            recordingId: props.recordingReducer.recordingId\r\n        }\r\n\r\n        console.log(reduxPayload)\r\n        props.ADD_COMPLEX_SYMPTOM({symptom:props.recordingReducer.complexSymptomState, ...reduxPayload})\r\n        props.REMOVE_COMPLEX_STATE()\r\n        reset()\r\n    }\r\n\r\n    switch (props.recordingReducer.complexSymptomState) {\r\n        case 'pain':\r\n            return (\r\n                <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto' }}>\r\n                    <TextInput label='Severity' error={errors} styling={{\r\n                        name: 'severity',\r\n                        type: 'range',\r\n                        min: 0,\r\n                        max: 10,\r\n                        ref: register({ required: true })\r\n                    }} value={watch('severity')}/>\r\n\r\n                    <TextInput label='Location' error={errors} styling={{\r\n                        name: 'location',\r\n                        type: 'select',\r\n                        ref: register,\r\n                        extras: {\r\n                            options: [\r\n                                { label: 'Click and choose a Location...', value: '' },\r\n\r\n                                { label: 'Lower Left Abdomen', value: 'lower_lhs' },\r\n                                { label: 'Lower Mid Abdomen', value: 'lower_mid' },\r\n                                { label: 'Lower Right Abdomen', value: 'lower_rhs' },\r\n\r\n                                { label: 'Middle Left Abdomen', value: 'mid_lhs' },\r\n                                { label: 'Middle Mid Abdomen', value: 'mid_mid' },\r\n                                { label: 'Middle Right Abdomen', value: 'mid_rhs' },\r\n\r\n                                { label: 'Upper Left Abdomen', value: 'upper_lhs' },\r\n                                { label: 'Upper Mid Abdomen', value: 'upper_mid' },\r\n                                { label: 'Upper Right Abdomen', value: 'upper_rhs' },\r\n                            ]\r\n                        },\r\n                    }} />\r\n\r\n                    <TextInput label='Notes' error={errors} styling={{\r\n                        name: 'notes',\r\n                        type: 'text',\r\n                        placeholder: `Add any extra information here...`,\r\n                        ref: register,\r\n                    }} />\r\n\r\n                    <br />\r\n\r\n                    <FormButtonContainer style={{ width: '100%' }}>\r\n                        <BubbleButton onClick={props.REMOVE_COMPLEX_STATE}>Cancel</BubbleButton>\r\n                        <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                    </FormButtonContainer>\r\n\r\n                </form>\r\n            )\r\n\r\n        case 'squeeze':\r\n            return (\r\n                <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto' }}>\r\n                    <TextInput label='Severity' error={errors} styling={{\r\n                        name: 'severity',\r\n                        type: 'range',\r\n                        min: 0,\r\n                        max: 10,\r\n                        ref: register({ required: true })\r\n                    }} value={watch('severity')}/>\r\n\r\n                    <TextInput label='Location' error={errors} styling={{\r\n                        name: 'location',\r\n                        type: 'select',\r\n                        ref: register,\r\n                        extras: {\r\n                            options: [\r\n                                { label: 'Click and choose a Location...', value: '' },\r\n\r\n                                { label: 'Lower Left Abdomen', value: 'lower_lhs' },\r\n                                { label: 'Lower Mid Abdomen', value: 'lower_mid' },\r\n                                { label: 'Lower Right Abdomen', value: 'lower_rhs' },\r\n\r\n                                { label: 'Middle Left Abdomen', value: 'mid_lhs' },\r\n                                { label: 'Middle Mid Abdomen', value: 'mid_mid' },\r\n                                { label: 'Middle Right Abdomen', value: 'mid_rhs' },\r\n\r\n                                { label: 'Upper Left Abdomen', value: 'upper_lhs' },\r\n                                { label: 'Upper Mid Abdomen', value: 'upper_mid' },\r\n                                { label: 'Upper Right Abdomen', value: 'upper_rhs' },\r\n                            ]\r\n                        },\r\n                    }} />\r\n\r\n                    <TextInput label='Notes' error={errors} styling={{\r\n                        name: 'notes',\r\n                        type: 'text',\r\n                        placeholder: `Add any extra information here...`,\r\n                        ref: register,\r\n                    }} />\r\n\r\n                    <br />\r\n\r\n                    <FormButtonContainer style={{ width: '100%' }}>\r\n                        <BubbleButton onClick={props.REMOVE_COMPLEX_STATE}>Cancel</BubbleButton>\r\n                        <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                    </FormButtonContainer>\r\n                </form>\r\n            )\r\n\r\n        case 'pain':\r\n            return (\r\n                <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto' }}>\r\n                    <TextInput label='Severity' error={errors} styling={{\r\n                        name: 'severity',\r\n                        type: 'range',\r\n                        min: 0,\r\n                        max: 10,\r\n                        ref: register({ required: true })\r\n                    }} value={watch('severity')}/>\r\n\r\n                    <TextInput label='Location' error={errors} styling={{\r\n                        name: 'location',\r\n                        type: 'select',\r\n                        ref: register,\r\n                        extras: {\r\n                            options: [\r\n                                { label: 'Click and choose a Location...', value: '' },\r\n\r\n                                { label: 'Lower Left Abdomen', value: 'lower_lhs' },\r\n                                { label: 'Lower Mid Abdomen', value: 'lower_mid' },\r\n                                { label: 'Lower Right Abdomen', value: 'lower_rhs' },\r\n\r\n                                { label: 'Middle Left Abdomen', value: 'mid_lhs' },\r\n                                { label: 'Middle Mid Abdomen', value: 'mid_mid' },\r\n                                { label: 'Middle Right Abdomen', value: 'mid_rhs' },\r\n\r\n                                { label: 'Upper Left Abdomen', value: 'upper_lhs' },\r\n                                { label: 'Upper Mid Abdomen', value: 'upper_mid' },\r\n                                { label: 'Upper Right Abdomen', value: 'upper_rhs' },\r\n                            ]\r\n                        },\r\n                    }} />\r\n\r\n                    <TextInput label='Notes' error={errors} styling={{\r\n                        name: 'notes',\r\n                        type: 'text',\r\n                        placeholder: `Add any extra information here...`,\r\n                        ref: register,\r\n                    }} />\r\n\r\n                    <br />\r\n\r\n                    <FormButtonContainer style={{ width: '100%' }}>\r\n                        <BubbleButton onClick={props.REMOVE_COMPLEX_STATE}>Cancel</BubbleButton>\r\n                        <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                    </FormButtonContainer>\r\n\r\n                </form>\r\n            )\r\n\r\n        case 'cramping':\r\n            return (\r\n                <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto' }}>\r\n                    <TextInput label='Severity' error={errors} styling={{\r\n                        name: 'severity',\r\n                        type: 'range',\r\n                        min: 0,\r\n                        max: 10,\r\n                        ref: register({ required: true })\r\n                    }} value={watch('severity')}/>\r\n\r\n                    <TextInput label='Location' error={errors} styling={{\r\n                        name: 'location',\r\n                        type: 'select',\r\n                        ref: register,\r\n                        extras: {\r\n                            options: [\r\n                                { label: 'Click and choose a Location...', value: '' },\r\n\r\n                                { label: 'Lower Left Abdomen', value: 'lower_lhs' },\r\n                                { label: 'Lower Mid Abdomen', value: 'lower_mid' },\r\n                                { label: 'Lower Right Abdomen', value: 'lower_rhs' },\r\n\r\n                                { label: 'Middle Left Abdomen', value: 'mid_lhs' },\r\n                                { label: 'Middle Mid Abdomen', value: 'mid_mid' },\r\n                                { label: 'Middle Right Abdomen', value: 'mid_rhs' },\r\n\r\n                                { label: 'Upper Left Abdomen', value: 'upper_lhs' },\r\n                                { label: 'Upper Mid Abdomen', value: 'upper_mid' },\r\n                                { label: 'Upper Right Abdomen', value: 'upper_rhs' },\r\n                            ]\r\n                        },\r\n                    }} />\r\n\r\n                    <TextInput label='Notes' error={errors} styling={{\r\n                        name: 'notes',\r\n                        type: 'text',\r\n                        placeholder: `Add any extra information here...`,\r\n                        ref: register,\r\n                    }} />\r\n\r\n                    <br />\r\n\r\n                    <FormButtonContainer style={{ width: '100%' }}>\r\n                        <BubbleButton onClick={props.REMOVE_COMPLEX_STATE}>Cancel</BubbleButton>\r\n                        <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                    </FormButtonContainer>\r\n\r\n                </form>\r\n            )\r\n\r\n        case 'custom':\r\n            return (\r\n                <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto'}}>\r\n                    <TextInput label='Symptom' error={errors} styling={{\r\n                        name: 'symptom',\r\n                        type: 'text',\r\n                        placeholder: `What symptom are you experiencing?`,\r\n                        ref: register({ required: true })\r\n                    }} />\r\n                   \r\n                    <TextInput label='Severity' error={errors} styling={{\r\n                        name: 'severity',\r\n                        type: 'range',\r\n                        min: 0,\r\n                        max: 10,\r\n                        ref: register({ required: true })\r\n                    }} value={watch('severity')}/>\r\n\r\n                    <TextInput label='Location' error={errors} styling={{\r\n                        name: 'location',\r\n                        type: 'select',\r\n                        ref: register,\r\n                        extras: {\r\n                            options: [\r\n                                { label: 'Click and choose a Location...', value: '' },\r\n\r\n                                { label: 'Lower Left Abdomen', value: 'lower_lhs' },\r\n                                { label: 'Lower Mid Abdomen', value: 'lower_mid' },\r\n                                { label: 'Lower Right Abdomen', value: 'lower_rhs' },\r\n\r\n                                { label: 'Middle Left Abdomen', value: 'mid_lhs' },\r\n                                { label: 'Middle Mid Abdomen', value: 'mid_mid' },\r\n                                { label: 'Middle Right Abdomen', value: 'mid_rhs' },\r\n\r\n                                { label: 'Upper Left Abdomen', value: 'upper_lhs' },\r\n                                { label: 'Upper Mid Abdomen', value: 'upper_mid' },\r\n                                { label: 'Upper Right Abdomen', value: 'upper_rhs' },\r\n                            ]\r\n                        },\r\n                    }} />\r\n\r\n                    <TextInput label='Notes' error={errors} styling={{\r\n                        name: 'notes',\r\n                        type: 'text',\r\n                        placeholder: `Add any extra information here...`,\r\n                        ref: register,\r\n                    }} />\r\n\r\n                    <br />\r\n\r\n                    <FormButtonContainer style={{ width: '100%' }}>\r\n                        <BubbleButton onClick={props.REMOVE_COMPLEX_STATE}>Cancel</BubbleButton>\r\n                        <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                    </FormButtonContainer>\r\n\r\n                </form>\r\n            )\r\n\r\n        default:\r\n            return (\r\n                null\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\nconst mapDispatchToProps = dispatch => ({\r\n    REMOVE_COMPLEX_STATE: e => dispatch({ type: 'REMOVE_COMPLEX_STATE' }),\r\n    ADD_COMPLEX_SYMPTOM: e => dispatch({type:\"ADD_COMPLEX_SYMPTOM\", payload:e}),\r\n    REMOVE_COMPLEX_STATE: e => dispatch({type:'REMOVE_COMPLEX_STATE'})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplexSymptomForm)","import React, { useState } from 'react'\r\nimport { PageBase } from '../pageBase'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { faMicrophoneAlt, faStop } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport Timer from 'react-compound-timer'\r\nimport ComplexSymptomForm from './complexSymptomForm'\r\n\r\nconst RecordButton = styled(animated.div)`\r\n    position:absolute;\r\n    height:72pt;\r\n    width:72pt;\r\n    border-radius:50%;\r\n    background: linear-gradient(90deg, #241034 0%, #1C0638 100%);\r\n    color:white;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    top:0;\r\n    left:0;\r\n\r\n    .icon {\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content: center;\r\n        font-size:24pt;\r\n    }\r\n\r\n`\r\n\r\nconst RecordingDisplay = styled(animated.div)`\r\n    position:absolute;\r\n    top:0;\r\n    right:0;\r\n    height:137pt;\r\n    width:100vw;\r\n    background:white;\r\n    border-radius:0 0 12pt 12pt;\r\n    position:absolute;\r\n\r\n    .recordingDurationContainer {\r\n        bottom:48pt;\r\n        right:36pt;\r\n        position:absolute;\r\n\r\n        .recordingDurationLabel {\r\n            margin:0;\r\n            text-transform:uppercase;\r\n            font-size:9pt;\r\n            color:rgba(0,0,0,.24);\r\n            font-weight:bold;\r\n            position:relative;\r\n        }\r\n\r\n        .recordingDuration {\r\n            display:inline-flex;\r\n            align-items:center;\r\n            position:absolute;\r\n            right:0;\r\n    \r\n            .auxLabel {\r\n                display:flex;\r\n                flex-direction:column;\r\n                align-items:flex-start;\r\n                justify-content:space-between;\r\n                margin:0;\r\n                font-size:9pt;\r\n                margin-left:3pt;\r\n                height:20pt;\r\n            }\r\n    \r\n            .minLabel {\r\n                margin:0;\r\n                text-transform:uppercase;\r\n            }\r\n            .sec {\r\n                font-size:9pt;\r\n                margin:0;\r\n            }\r\n            .min {\r\n                font-size:24pt;\r\n                margin:0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n`\r\nconst SymptomContainerHolder = styled(animated.div)`\r\n    position:absolute;\r\n    top:171pt;\r\n    right:0;\r\n    width:100%;\r\n\r\n    .holderTitle {\r\n        color:white;\r\n        margin-left:42pt;\r\n        font-size:9pt;\r\n    }\r\n\r\n`\r\nconst SymptomContainer = styled(animated.div)`\r\n    background:none;\r\n    overflow-x:scroll;\r\n    width:100%;\r\n    display:flex;\r\n    box-sizing:border-box;\r\n\r\n    .symptomCard {\r\n        margin: 0 6pt;\r\n        background:white;\r\n        border-radius:12pt;\r\n        padding:9pt;\r\n        max-width:120pt;\r\n        box-sizing:border-box;\r\n        font-size:9pt;\r\n        flex-shrink:0;\r\n        flex-grow:0;\r\n\r\n        : first-of-type {\r\n            margin-left:36pt;\r\n            flex-shrink:0;\r\n            flex-grow:0;\r\n        }\r\n\r\n    }\r\n\r\n`\r\n\r\nconst DataCollection = props => {\r\n\r\n    const buttonAnimation = useSpring({\r\n        from: {\r\n            transform: props.recordingReducer.isRecording ? 'translate(calc(72pt - 50%), calc(300pt - 50%)) rotate(360deg) scale(1)' : 'translate(calc(36pt  - 50%), calc(100pt - 50%)) rotate(0deg) scale(0.5)',\r\n        },\r\n        transform: !props.recordingReducer.isRecording ? 'translate(calc(72pt - 50%), calc(300pt - 50%)) rotate(360deg) scale(1)' : 'translate(calc(36pt  - 50%), calc(100pt - 50%)) rotate(0deg) scale(0.5)',\r\n        config: {\r\n            tension: 200,\r\n            mass: 0.25,\r\n            friction: 18,\r\n            precision: 0.001,\r\n        }\r\n    })\r\n\r\n    const colorDarken = useSpring({\r\n        background: !props.recordingReducer.isRecording ? 'linear-gradient(90deg, white 0%, white 100%)' : 'linear-gradient(90deg, #241034 0%, #1C0638 100%)',\r\n        from: {\r\n            background: props.recordingReducer.isRecording ? 'linear-gradient(90deg, white 0%, white 100%)' : 'linear-gradient(90deg, #241034 0%, #1C0638 100%)'\r\n        },\r\n        config: {\r\n            tension: 300,\r\n            mass: 0.25,\r\n            friction: 18,\r\n            precision: 0.001,\r\n        }\r\n    })\r\n\r\n    const slideInTop = useSpring({\r\n        from: {\r\n            top: props.recordingReducer.isRecording ? '-100%' : '0%'\r\n        },\r\n        top: !props.recordingReducer.isRecording ? '-100%' : '0%',\r\n        config: {\r\n            tension: 300,\r\n            mass: 0.3,\r\n            friction: 25,\r\n            precision: 0.001,\r\n        }\r\n    })\r\n\r\n    const slideFromRight = useSpring({\r\n        from: {\r\n            right: props.recordingReducer.isRecording ? '-100%' : '0%'\r\n        },\r\n        right: !props.recordingReducer.isRecording ? '-100%' : '0%',\r\n        config: {\r\n            tension: 300,\r\n            mass: 0.3,\r\n            friction: 25,\r\n            precision: 0.001,\r\n        }\r\n    })\r\n\r\n    const complexSlideIn = useSpring({\r\n        from: {\r\n            left: props.recordingReducer.complexSymptomState ? '-100%' : '0%'\r\n        },\r\n        left: !props.recordingReducer.complexSymptomState ? '-100%' : '0%',\r\n        config: {\r\n            tension: 300,\r\n            mass: 0.3,\r\n            friction: 25,\r\n            precision: 0.001,\r\n        }\r\n    })\r\n\r\n    return (\r\n\r\n        <Timer startImmediately={false} lastUnit='m'>\r\n            {({ start, resume, pause, reset }) => {\r\n\r\n                const recordButtonPress = () => {\r\n                    if (props.recordingReducer.isRecording) {\r\n                        props.STOP_RECORDING()\r\n                        pause()\r\n                        reset()\r\n                        props.MOVE_PAGE(2)\r\n\r\n                    } else {\r\n                        props.START_RECORDING()\r\n                        start()\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <PageBase style={{ ...colorDarken, paddingBottom: '64pt' }}>\r\n                        {props.recordingReducer.symptomArray ?\r\n                            <p style={{ position: 'absolute', top: '24pt', right: '32pt', zIndex:'103', color:'rgba(0,0,0,.24)'}}>({props.recordingReducer.symptomArray && props.recordingReducer.symptomArray.length}) - a {props.recordingReducer.symptomArray && props.recordingReducer.symptomArray[props.recordingReducer.symptomArray.length - 1].symptom} was added</p> :\r\n                            'nothing..'}\r\n                        <RecordingDisplay style={slideInTop}>\r\n                            <div className='recordingDurationContainer'>\r\n                                <p className='recordingDurationLabel'>Recording Duration</p>\r\n                                <div className='recordingDuration'>\r\n                                    <p className='min'><Timer.Minutes /></p>\r\n                                    <div className='auxLabel'>\r\n                                        <p className='sec'><Timer.Seconds /></p>\r\n                                        <p className='minLabel'>min</p>\r\n                                    </div>\r\n                                </div>\r\n                                <p style={{position:'absolute', bottom:'-24pt', left:'-81pt', fontSize:'9pt', color:'rgba(0,0,0,.24)'}}>Stop Recording</p>\r\n                            </div>\r\n\r\n                        </RecordingDisplay>\r\n\r\n                        <RecordButton style={buttonAnimation} onClick={recordButtonPress}>\r\n                            <FontAwesomeIcon className='icon' icon={props.recordingReducer.isRecording ? faStop : faMicrophoneAlt} />\r\n                        </RecordButton>\r\n\r\n                        <p style={{ position: 'absolute', top: '275pt', width: '130pt', left: '125pt', fontSize: '9pt', color: 'rgba(0,0,0,.24)' }}>When you're ready, press this button to start adding data.</p>\r\n\r\n                        <SymptomContainerHolder style={{ top: '171pt', ...slideFromRight }}>\r\n                            <p className='holderTitle'>Simple Symptoms</p>\r\n                            <SymptomContainer>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ADD_SIMPLE_SYMPTOM({\r\n                                    symptom: 'burp',\r\n                                    recordingid: props.recordingReducer.recordingId,\r\n                                    username: props.metaReducer.username,\r\n                                })}>\r\n                                    <p>Burp</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ADD_SIMPLE_SYMPTOM({\r\n                                    symptom: 'urgeToPoo',\r\n                                    recordingid: props.recordingReducer.recordingId,\r\n                                    username: props.metaReducer.username,\r\n                                })}>\r\n                                    <p>Urge to Poo</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ADD_SIMPLE_SYMPTOM({\r\n                                    symptom: 'fart',\r\n                                    recordingid: props.recordingReducer.recordingId,\r\n                                    username: props.metaReducer.username,\r\n                                })}>\r\n                                    <p>Fart</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ADD_SIMPLE_SYMPTOM({\r\n                                    symptom: 'gurgle',\r\n                                    recordingid: props.recordingReducer.recordingId,\r\n                                    username: props.metaReducer.username,\r\n                                })}>\r\n                                    <p>Gurgle</p>\r\n                                </div>\r\n\r\n                            </SymptomContainer>\r\n                        </SymptomContainerHolder>\r\n\r\n                        <SymptomContainerHolder style={{ top: '256pt', ...slideFromRight }}>\r\n                            <p className='holderTitle'>Complex Symptoms</p>\r\n                            <SymptomContainer>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ENTERING_COMPLEX_SYMPTOM('pain')}>\r\n                                    <p>Pain</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ENTERING_COMPLEX_SYMPTOM('squeeze')}>\r\n                                    <p>Squeeze</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ENTERING_COMPLEX_SYMPTOM('cramping')}>\r\n                                    <p>Cramping</p>\r\n                                </div>\r\n\r\n                                <div className='symptomCard' onClick={() => props.ENTERING_COMPLEX_SYMPTOM('custom')}>\r\n                                    <p>Custom</p>\r\n                                </div>\r\n\r\n                            </SymptomContainer>\r\n                        </SymptomContainerHolder>\r\n\r\n                        <PageBase style={{ position: 'absolute', paddingBottom: '64pt', ...complexSlideIn }}>\r\n                            <p onClick={() => props.REMOVE_COMPLEX_STATE()}>Close</p>\r\n                            <div className='pageHeading'>\r\n                                <p className='pageCategory'>Complex Symptom</p>\r\n                                <p className='pageTitle'>{props.recordingReducer.complexSymptomState}</p>\r\n                            </div>\r\n                            <ComplexSymptomForm />\r\n                        </PageBase>\r\n\r\n                    </PageBase>\r\n                )\r\n\r\n            }}\r\n\r\n        </Timer>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\nconst mapDispatchToProps = dispatch => ({\r\n    ADD_SIMPLE_SYMPTOM: e => dispatch({ type: 'ADD_SIMPLE_SYMPTOM', payload: e }),\r\n    START_RECORDING: e => dispatch({ type: 'START_RECORDING' }),\r\n    STOP_RECORDING: e => dispatch({ type: 'STOP_RECORDING' }),\r\n    ENTERING_COMPLEX_SYMPTOM: e => dispatch({ type: 'ENTERING_COMPLEX_SYMPTOM', payload: e }),\r\n    REMOVE_COMPLEX_STATE: e => dispatch({ type: 'REMOVE_COMPLEX_STATE' }),\r\n    MOVE_PAGE: pageNumber => dispatch({ type: 'MOVE_PAGE', payload: pageNumber }),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataCollection)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { animated, useSpring } from 'react-spring'\r\nimport { PageBase } from '../pageBase'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput, FormButtonContainer, SubmitButton } from '../../components/forms/unifiedInput/formInputs'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\n\r\nconst OverallRating = props => {\r\n\r\n    let history = useHistory()\r\n\r\n    let { register, handleSubmit, reset, errors, watch } = useForm({\r\n        defaultValues: {\r\n            overall: 5,\r\n            abdPain: 5,\r\n            bloating: 5,\r\n            wind: 5\r\n        }\r\n    })\r\n\r\n    const onSubmit = e => {\r\n\r\n        let newRating = {\r\n            username: props.metaReducer.username,\r\n            recordingId: props.recordingReducer.recordingId,\r\n            ...e,\r\n        }\r\n\r\n        history.push('/')\r\n        props.SUBMIT_RATINGS(newRating)\r\n        props.RESET_RECORDING()\r\n        reset()\r\n    }\r\n\r\n    const fadeIn = useSpring({\r\n        from: { opacity: 0, transform: 'scale(0)' },\r\n        opacity: 1,\r\n        transform: 'scale(1)',\r\n        config: {\r\n            tension: 1000 + Math.random() * 100,\r\n            mass: 0.25 + Math.random() * 1,\r\n            friction: 10,\r\n            precision: 0.001\r\n        }\r\n    })\r\n\r\n    return (\r\n\r\n        <PageBase style={{ paddingBottom: '64pt' }}>\r\n\r\n            <div style={fadeIn} className='pageHeading'>\r\n                <animated.p style={fadeIn} className='pageCategory'>Recording - Final Step</animated.p>\r\n                <animated.p style={fadeIn} className='pageTitle'>Overall Ratings</animated.p>\r\n                <animated.p style={fadeIn} className='pageInstructions'>We've finished the recording! All we need you to do now is to tell us how you felt in each of the following categories below during the recording.</animated.p>\r\n            </div>\r\n\r\n            <animated.form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: '300pt', margin: '0 auto', ...fadeIn }}>\r\n\r\n                <TextInput label='Overall Symptoms' error={errors} styling={{\r\n                    name: 'overall',\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 10,\r\n                    ref: register({ required: true }),\r\n                }} value={watch('overall')} />\r\n\r\n                <TextInput label='Abdominal Pain' error={errors} styling={{\r\n                    name: 'abdPain',\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 10,\r\n                    ref: register({ required: true }),\r\n                }} value={watch('abdPain')} />\r\n\r\n                <TextInput label='Bloating' error={errors} styling={{\r\n                    name: 'bloating',\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 10,\r\n                    ref: register({ required: true }),\r\n                }} value={watch('bloating')} />\r\n\r\n                <TextInput label='Wind' error={errors} styling={{\r\n                    name: 'wind',\r\n                    type: 'range',\r\n                    min: 0,\r\n                    max: 10,\r\n                    ref: register({ required: true }),\r\n                }} value={watch('wind')} />\r\n\r\n                <br />\r\n\r\n                <FormButtonContainer>\r\n                    <SubmitButton type='submit' value='Submit Recording' />\r\n                </FormButtonContainer>\r\n\r\n            </animated.form>\r\n\r\n        </PageBase>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    DEVICE_META: payload => dispatch({ type: 'DEVICE_META', payload: payload }),\r\n    RESET_RECORDING: e => dispatch({ type: 'RESET_RECORDING' }),\r\n    SUBMIT_RATINGS: e => dispatch({ type: 'SUBMIT_RATINGS', payload: e })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OverallRating)","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport PreRecordingPage from './PreRecordingPage'\r\nimport DataCollection from './DataCollection'\r\nimport OverallRating from './OverallRating'\r\nimport { socket } from '../../serverSocket'\r\n\r\nconst RecordingPageV2 = props => {\r\n\r\n    switch (props.recordingReducer.currentPage) {\r\n        case 0:\r\n            return <PreRecordingPage />\r\n\r\n        case 1:\r\n            return <DataCollection />\r\n\r\n        case 2:\r\n            return <OverallRating />\r\n\r\n        default:\r\n            return (\r\n                <h1>There's an error here...</h1>\r\n            )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\nconst mapDispatchToProps = dispatch => ({\r\n    MOVE_PAGE: pageNumber => dispatch({ type: 'MOVE_PAGE', payload: pageNumber }),\r\n    DEVICE_META: payload => dispatch({ type: 'DEVICE_META', payload: { symptom: payload } }),\r\n    CONNECT_SOCKET: e => dispatch({ type: \"CONNECT_SOCKET\", payload: e })\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordingPageV2)","import React from 'react';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Recording from './pages/Recording';\r\nimport Food from './pages/Food';\r\nimport { FixedNavBar } from './navBar/FixedNavBar';\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport Context from './pages/Context';\r\nimport { socket } from './serverSocket';\r\nimport { connect } from 'react-redux'\r\nimport Home from './pages/Home';\r\nimport { useCookies } from 'react-cookie'\r\nimport LoginV2 from './pages/loginPage/LoginV2';\r\nimport RecordingV2 from './pages/recordingPage/RecordingV2';\r\nconst jwt = require('jsonwebtoken')\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none; \r\n    -ms-user-select: none; \r\n    user-select: none;\r\n  }\r\n  body {\r\n    background: #ecf0f1;\r\n  }\r\n`\r\n\r\nconst StyledAppDiv = styled.div`\r\n  @import url('https://fonts.googleapis.com/css?family=Varela+Round&display=swap');\r\n  font-family: 'Arial', sans-serif;\r\n  margin-top:32pt;\r\n  margin-bottom:90pt;\r\n`\r\n\r\nconst RecordingStatusBar = styled.div`\r\n  background:${props => props.recording ? '#ffa502' : null}\r\n  color:white;\r\n  position:fixed;\r\n  width:100vw;\r\n  box-sizing:border-box;\r\n  top:0;\r\n  left:0;\r\n  & p {\r\n    margin:3pt 0;\r\n    text-align:center;\r\n  }\r\n`\r\n\r\nconst App = props => {\r\n\r\n  let [cookies, setCookies] = useCookies()\r\n\r\n  const onFoodSubmit = foods => {\r\n    socket.emit('client/submit/food', { ...foods, timestamp: foods.timestamp })\r\n  }\r\n\r\n  const onContextSubmit = context => {\r\n    socket.emit('client/submit/context', { ...context, timestamp: context.timestamp || new Date() })\r\n  }\r\n\r\n  socket.on('server/login/response', response => {\r\n    console.log('login attempt')\r\n    props.ADD_USER_DETAILS(response)\r\n  })\r\n\r\n  if (props.metaReducer.username && props.metaReducer.loggedIn) {\r\n\r\n    return (\r\n\r\n      <Router>\r\n        <StyledAppDiv className='App'>\r\n\r\n          <RecordingStatusBar recording={props.currentRecording.isReadyToRecord}>\r\n            <p>{props.currentRecording.isReadyToRecord ? `You're recording...` : null}</p>\r\n          </RecordingStatusBar>\r\n\r\n          <FixedNavBar />\r\n\r\n          <Switch>\r\n\r\n            <Route exact path='/'><Home /></Route>\r\n            <Route path='/recording'><RecordingV2 /></Route>\r\n            <Route path='/addFood'><Food onSubmit={onFoodSubmit} /></Route>\r\n            <Route path='/addContext'><Context onSubmit={onContextSubmit} /></Route>\r\n            <Route path='/login'><LoginV2 /></Route>\r\n            {process.env.NODE_ENV === 'development' && <Route path='/test'><RecordingV2 /></Route>}\r\n\r\n          </Switch>\r\n          <GlobalStyle />\r\n        </StyledAppDiv>\r\n      </Router>\r\n\r\n    )\r\n\r\n  } else {\r\n    return (\r\n\r\n      <StyledAppDiv className='App'>\r\n        <LoginV2 />\r\n      </StyledAppDiv>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  ADD_USER_DETAILS: e => dispatch({ type: 'ADD_USER_DETAILS', payload: e }),\r\n  ADD_JWT: e => dispatch({ type: 'ADD_JWT', payload: e })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { socket } from \"../serverSocket\"\r\n\r\nconst defaultState = {}\r\n\r\nexport const currentRecording = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'RESET':\r\n            state = defaultState\r\n            return state\r\n\r\n        case 'ADD_HARDWARE_RECORDING_NUMBER':\r\n\r\n            state = {\r\n                ...state, \r\n                hardwareRecordingNumber:action.payload.hardwareRecordingNumber,\r\n                isReadyToRecord:true\r\n            }\r\n            return state\r\n\r\n        case 'CHANGE_RECORDING_STATE':\r\n            let recordingState = state.isRecording ? false : true\r\n\r\n            state = {\r\n                ...state, isRecording:recordingState,\r\n                recordingClickCounter: state.recordingClickCounter+1 || 1,\r\n            }\r\n\r\n            socket.emit('client/recording/state', {isRecording: state.isRecording, hardwareRecordingNumber:state.hardwareRecordingNumber, recordingId:state.recordingId || null})\r\n\r\n            return state\r\n\r\n        case 'ADD_SHORTCUT_SYMPTOM':\r\n\r\n            let uploadPayload = {\r\n                ...action.payload, \r\n                timestamp:new Date(), \r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber\r\n            }\r\n\r\n            state = {...state, \r\n                symptomArray: state.symptomArray ?\r\n                [...state.symptomArray, {...uploadPayload}] :\r\n                [{...uploadPayload}],\r\n                isComplex:false\r\n            }\r\n\r\n            socket.emit('client/submit/symptom', uploadPayload)\r\n            return state\r\n\r\n        case 'EDIT_SYMPTOM':\r\n\r\n            let newSymptom = {\r\n                ...state.currSymptom || null,\r\n                ...action.payload,\r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                timestamp:new Date()\r\n            }\r\n\r\n            state = { \r\n                ...state, \r\n                currSymptom:newSymptom,\r\n                isComplex: state.isComplex ? false : true\r\n            }\r\n            return state\r\n            \r\n        case 'ADD_SYMPTOM':\r\n\r\n            let symptomUpload = {\r\n                ...state.currSymptom, \r\n                ...action.payload, \r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                timestamp:new Date()\r\n            }\r\n\r\n            state = {...state,\r\n                symptomArray: state.symptomArray ?\r\n                [...state.symptomArray, symptomUpload || null] :\r\n                [symptomUpload || null],\r\n                isComplex:false\r\n            }\r\n\r\n            socket.emit('client/submit/symptom', {\r\n                ...state.currSymptom, \r\n                ...action.payload, \r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                recordingId:state.recordingId || null,\r\n                timestamp: new Date()\r\n            })\r\n\r\n            state.currSymptom = {}\r\n\r\n            return state\r\n        \r\n        case 'ADD_RATING':\r\n\r\n            state = {\r\n                ...state, \r\n                rating: action.payload,\r\n                isReadyToRecord:false,\r\n                isRecording:false,\r\n                recordingClickCounter:0\r\n            }\r\n\r\n            socket.emit('client/submit/rating', {\r\n                ...action.payload,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber, \r\n                recordingId:state.recordingId || null\r\n            })\r\n\r\n            return state\r\n\r\n        case 'ADD_RECORDING_ID':\r\n            \r\n            state = {\r\n                ...state, \r\n                recordingId:action.payload\r\n            }\r\n\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { socket } from \"../serverSocket\";\r\n\r\nconst defaultState = {\r\n    currentPage: (process.env.NODE_ENV !== 'development') ? 0 : 1,\r\n    isRecording: (process.env.NODE_ENV !== 'development') ? null : true\r\n}\r\n\r\nexport const recordingReducerV2 = (state = defaultState, action) => {\r\n\r\n    const recordingMeta = {\r\n        recordingId: state.recordingId,\r\n        hardwareRecordingNumber: state.hardwareRecordingNumber,\r\n        deviceNumber: state.deviceNumber,\r\n        username: state.username\r\n    }\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case 'RESET_RECORDING':\r\n            state = defaultState\r\n            return state\r\n\r\n        case 'MOVE_PAGE':\r\n            state = {\r\n                ...state,\r\n                currentPage: action.payload\r\n            }\r\n            return state\r\n\r\n        case 'DEVICE_META':\r\n\r\n            state = {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n            return state\r\n\r\n        case 'ADD_SIMPLE_SYMPTOM':\r\n\r\n            let newSimpleSymptom = {\r\n                ...recordingMeta,\r\n                ...action.payload\r\n            }\r\n\r\n            socket.emit('/clientv2/recording/newSymptom', newSimpleSymptom)\r\n\r\n            state = {\r\n                ...state,\r\n                symptomArray: state.symptomArray ? [...state.symptomArray, newSimpleSymptom] : [newSimpleSymptom]\r\n            }\r\n\r\n            return state\r\n\r\n        case 'START_RECORDING':\r\n            state = {\r\n                ...state,\r\n                isRecording: true\r\n            }\r\n            return state\r\n\r\n        case 'STOP_RECORDING':\r\n\r\n            state = {\r\n                ...state,\r\n                isRecording: false\r\n            }\r\n\r\n            socket.emit('/clientv2/recording/stop', state.recordingId)\r\n\r\n            return state\r\n\r\n        case \"ENTERING_COMPLEX_SYMPTOM\":\r\n\r\n            state = {\r\n                ...state,\r\n                complexSymptomState: state.complexSymptomState ? null : action.payload\r\n            }\r\n\r\n            return state\r\n\r\n        case 'REMOVE_COMPLEX_STATE':\r\n\r\n            state = {\r\n                ...state,\r\n                complexSymptomState: null\r\n            }\r\n\r\n            return state\r\n\r\n        case 'ADD_COMPLEX_SYMPTOM':\r\n\r\n            let newComplexSymptom = {\r\n                symptom: state.complexSymptomState,\r\n                ...recordingMeta,\r\n                ...action.payload,\r\n            }\r\n\r\n            socket.emit('/clientv2/recording/newSymptom', newComplexSymptom)\r\n\r\n            state = {\r\n                ...state,\r\n                symptomArray: state.symptomArray ? [...state.symptomArray, newComplexSymptom] : [newComplexSymptom]\r\n            }\r\n\r\n            return state\r\n\r\n        case 'SUBMIT_RATINGS':\r\n\r\n            let newOverall = {\r\n                ...recordingMeta,\r\n                ...action.payload,\r\n            }\r\n\r\n            socket.emit('/clientv2/recording/newOverall', newOverall)\r\n\r\n            state = {\r\n                ...state,\r\n                overalls: newOverall,\r\n            }\r\n\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport { currentRecording } from './store/recordingReducer'\r\nimport { recordingReducerV2 } from './store/recordingReducerV2'\r\nconst JWT = require('jsonwebtoken')\r\n\r\nconst defaultState = {}\r\n\r\nconst defaultReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst debugState = {\r\n    loggedIn:true,\r\n    username:'henry.chen',\r\n}\r\n\r\nconst metaReducer = (state = process.env.NODE_ENV === 'development' ? debugState : defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_JWT':\r\n            let { loggedIn, jwt } = action.payload\r\n            state = { ...state, loggedIn: loggedIn, jwt: jwt }\r\n            return state\r\n\r\n        case 'ADD_USER_DETAILS':\r\n\r\n            let jwtData = JWT.verify(action.payload.jwt, process.env.JWT_KEY ?? 'yellowMonkey2020')\r\n\r\n            console.log(jwtData._doc)\r\n\r\n            state = {\r\n                ...state,\r\n                loggedIn:jwtData && true,\r\n                username: jwtData._doc.username.toLowerCase()\r\n            }\r\n\r\n            return state\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    default: defaultReducer,\r\n    metaReducer: metaReducer,\r\n    currentRecording: currentRecording,\r\n    recordingReducer: recordingReducerV2\r\n})\r\n\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store';\r\n\r\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}