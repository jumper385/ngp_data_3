{"version":3,"sources":["components/forms/SchemaFormV2Components/InputBase.js","components/forms/SchemaFormV2Components/TextInput.js","components/forms/SchemaFormV2Components/RangeInput.js","components/forms/SchemaFormV2Components/StyledFormSubmit.js","components/forms/SchemaFormV2Components/StyledForm.js","components/forms/SchemaFormV2Components/NumberInput.js","components/forms/SchemaFormV2Components/DateTimeInput.js","components/forms/SchemaFormV2.js","components/buttons/RecordingButtonV2.js","components/notifications/snackbar.js","serverSocket.js","pages/Recording.js","pages/Food.js","navBar/FixedNavBar.js","pages/Context.js","pages/Home.js","pages/Login.js","App.js","serviceWorker.js","store/recordingReducer.js","store.js","index.js"],"names":["StyledInputComponent","styled","div","StyledTextInput","input","TextInput","props","className","label","type","value","onChange","name","placeholder","hint","StyledRangeInput","RangeInput","min","max","StyledFormSubmit","disabled","StyledForm","form","StyledNumberInput","NumberInput","StyledDateTimeInput","DatetimeInput","substr","Date","Input","useState","state","setState","useEffect","resetForm","payload","readyToReset","readyToChange","e","target","SchemaFormV2","schema","readyToSubmit","onReadyForm","newPayload","onSubmit","preventDefault","map","obj","index","key","RecordingButton","button","SnackbarContainer","hidden","connect","data","currentRecording","symptomArray","slice","length","object","symptom","socket","openSocket","RatingSchema","RecordingNumberSchema","SymptomSchema","pain","bloating","constipation","custom","dispatch","RESET","ADD_HARDWARE_RECORDING_NUMBER","CHANGE_RECORDING_STATE","ADD_SHORTCUT_SYMPTOM","EDIT_SYMPTOM","ADD_SYMPTOM","ADD_RATING","ADD_RECORDING_ID","console","log","on","recordingId","isReadyToRecord","onClick","isRecording","currSymptom","isComplex","recordingClickCounter","Food","food","style","textAlign","color","FixedNav","nav","FixedNavBar","exact","to","Schema","Context","Home","padding","ADD_JWT","useCookies","loggedIn","jwt","useForm","register","handleSubmit","watch","errors","emit","ref","required","GlobalStyle","createGlobalStyle","StyledAppDiv","RecordingStatusBar","recording","cookies","setCookies","response","path","foods","timestamp","context","Boolean","window","location","hostname","match","defaultState","rootReducer","combineReducers","default","action","metaReducer","hardwareRecordingNumber","recordingState","uploadPayload","newSymptom","symptomUpload","rating","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f97281ff.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const StyledInputComponent = styled.div`\r\n    -webkit-appearance: none;\r\n    border:none;\r\n    display:block;\r\n    font-family:sans-serif;\r\n    width:100%;\r\n    margin:15pt auto;\r\n    box-sizing:border-box;\r\n    \r\n    & .inputLabel {\r\n        margin:0;\r\n        font-size:12pt;\r\n        font-weight:bold;\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n    & .inputHint {\r\n        margin:0;\r\n        font-size:9pt;        \r\n        color:rgba(0,0,0,.18);\r\n        font-weight:bold;\r\n    }\r\n\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledTextInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const TextInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledTextInput \r\n                type='text' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react'\r\nimport { StyledInputComponent } from './InputBase'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input`\r\n    width:100%;\r\n    -webkit-appearance: none;\r\n    margin: 12pt 0;\r\n\r\n    &::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:12pt;\r\n        width:12pt;\r\n        border-radius:6pt;\r\n        background:#2ecc71;\r\n        margin-top:-5pt;\r\n    }\r\n\r\n    &::-webkit-slider-runnable-track {\r\n        -webkit-appearance: none;\r\n        border:none;\r\n        height:2pt;\r\n        background:rgba(0,0,0,.09);\r\n        border-radius:1pt;\r\n    }\r\n`\r\n\r\nexport const RangeInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label} (low:{props.min} - high:{props.max}) - {props ? props.value || 'No Rating Yet...': 'No Rating...'}</p>\r\n            <StyledRangeInput\r\n                type='range' \r\n                value={props.value} \r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                min={props.min}\r\n                max={props.max}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const StyledFormSubmit = styled.input`\r\n    margin:0;\r\n    -webkit-appearance: none;\r\n    width:100%;\r\n    height:36pt;\r\n    margin:0;\r\n    border:none;\r\n    border-radius:6pt;\r\n    background:${props => props.disabled ? '#bdc3c7' : '#2ecc71'};\r\n    font-weight:bold;\r\n    color:white;\r\n`","import styled from 'styled-components'\r\n\r\nexport const StyledForm = styled.form`\r\n    padding:0 12pt;\r\n    box-sizing:border-box;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledNumberInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const NumberInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledNumberInput \r\n                type='number' \r\n                value={props ? props.value || '' : ''}\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { StyledInputComponent } from './InputBase'\r\n\r\nconst StyledDateTimeInput = styled.input`\r\n    -webkit-appearance: none;\r\n    margin:6pt 0;\r\n    padding:6pt;\r\n    box-sizing:border-box;\r\n    border-radius:6pt;\r\n    border: 1pt solid #ecf0f1;\r\n    font-size:12pt;\r\n    color:rgba(0,0,0,.84);\r\n    box-shadow: 0 0pt 2px #ecf0f1, inset 0 0pt 2px #ecf0f1;\r\n    width:100%;\r\n\r\n    ::placeholder {\r\n        color:rgba(0,0,0,.18);\r\n    }\r\n\r\n`\r\n\r\nexport const DatetimeInput = props => {\r\n    return(\r\n        <StyledInputComponent>\r\n            <p className='inputLabel'>{props.label}</p>\r\n            <StyledDateTimeInput \r\n                type='datetime-local' \r\n                value={props ? props.value.substr(0,16) || new Date() : new Date() }\r\n                onChange={props.onChange}\r\n                name={props.name}\r\n                placeholder={props.name}\r\n            />\r\n            {props.hint ? <p className='inputHint'>{props.hint}</p> : null}\r\n        </StyledInputComponent>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { TextInput } from '../forms/SchemaFormV2Components/TextInput'\r\nimport { RangeInput } from '../forms/SchemaFormV2Components/RangeInput'\r\nimport { StyledFormSubmit } from './SchemaFormV2Components/StyledFormSubmit'\r\nimport { StyledForm } from './SchemaFormV2Components/StyledForm'\r\nimport { NumberInput } from '../forms/SchemaFormV2Components/NumberInput'\r\nimport { DatetimeInput } from './SchemaFormV2Components/DateTimeInput'\r\n\r\nconst Input = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.resetForm === true){\r\n            setState({...state, payload:{}, readyToReset:false})\r\n        }\r\n        if(state.readyToChange && props.onChange){\r\n            props.onChange(state.payload)\r\n            setState({...state, readyToChange:false})\r\n        }\r\n    }, [state, props])\r\n\r\n    const onChange = e => {\r\n        const payload = {[e.target.name]:e.target.value}\r\n        setState({...state, ...{payload:payload}, readyToChange:true})\r\n    }\r\n    \r\n    switch(props.type){\r\n        case 'text':\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                hint={props.hint}\r\n            />)\r\n        case 'range':\r\n            return(<RangeInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        case 'number':\r\n            return(<NumberInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                min={props.min}\r\n                max={props.max}\r\n                hint={props.hint}\r\n            />)\r\n        case 'time':\r\n            return(<DatetimeInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n                hint={props.hint}\r\n            />)\r\n        default:\r\n            return(<TextInput \r\n                label={props.label} \r\n                type={props.type} \r\n                name={props.name} \r\n                value={state.payload ? state.payload[props.name] || '' : ''} \r\n                onChange={onChange}\r\n            />)\r\n    }\r\n}\r\n\r\nexport const SchemaFormV2 = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    let schema = props.schema || []\r\n\r\n    useEffect(() => {\r\n        if(state.readyToSubmit === true){\r\n            if(props.onReadyForm){\r\n                props.onReadyForm(state.payload)\r\n            }\r\n            setState({...state, readyToSubmit:false})\r\n            resetForm()\r\n        }\r\n        if(state.readyToChange === true){\r\n            setState({...state, readyToChange:false})\r\n        }\r\n        if(state.readyToReset === true){\r\n            setState({...state, readyToReset:false})\r\n        }\r\n    }, [state, props])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setState({...state, readyToSubmit:true})\r\n    }\r\n\r\n    const onChange = e => {\r\n        let newPayload = {...state.payload, ...e}\r\n        setState({...state, payload:newPayload, readyToChange:true})\r\n    }\r\n\r\n    const resetForm = e => {\r\n        setState({readyToReset:true})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <StyledForm onSubmit={onSubmit}>\r\n                {schema.map((obj, index) => {\r\n                    return <Input {...obj} onChange={onChange} key={index} resetForm={state.readyToReset}/>\r\n                })}\r\n                <StyledFormSubmit disabled={state.payload ? false : true} type='submit'/>\r\n            </StyledForm>\r\n        </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const RecordingButton = styled.button`\r\n    -webkit-appearance:none;\r\n    border:none;\r\n    height:32pt;\r\n    display:block;\r\n    margin:0 auto;\r\n    border-radius:16pt;\r\n    padding:0 24pt;\r\n    font-weight:bold;\r\n    background:rgb(245,245,245);\r\n    margin-top:32pt;\r\n    box-shadow: \r\n        -9px -9px 16px white,\r\n        9px 9px 16px #a3b1c6;\r\n    user-select: none;\r\n    color:#a3b1c6;\r\n    -webkit-touch-callout: none;\r\n    font-family:sans-serif\r\n    letter-spacing:0.15em;\r\n\r\n    :active {\r\n        box-shadow:     \r\n            inset -9px -9px 16px white,\r\n            inset 9px 9px 16px #a3b1c6;\r\n        color:white;\r\n    }\r\n\r\n    i {\r\n        font-size:28pt;\r\n        height:100%;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n\r\n        &.pause {\r\n            color:#f6e58d;\r\n        }\r\n\r\n        &.record {\r\n            color:#ff4757;\r\n        }\r\n\r\n        &.play { \r\n            color:#7bed9f;\r\n        }\r\n\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\n\r\nconst SnackbarContainer = styled.div`\r\n    position:fixed;\r\n    bottom:0pt;\r\n    width:100vw\r\n    background:rgba(0,0,0,.18);\r\n    display:${props => props.hidden ? 'none' : null }\r\n`\r\n\r\nconst Snackbar = props => {\r\n\r\n    let data = (props.currentRecording && props.currentRecording.symptomArray) ? props.currentRecording.symptomArray : null\r\n\r\n    return(\r\n        <SnackbarContainer hidden={false}>\r\n            {\r\n                (data == null) ? \r\n                null : data.slice((data.length > 3) ? -3 : -data.length).map((object, index) => {\r\n                if(object != null) {return <p key={index}>({data.length-index}) - {object.symptom}</p>}\r\n                else return null\r\n                })\r\n            }\r\n        </SnackbarContainer>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n})\r\n\r\nexport default connect(mapStateToProps)(Snackbar)","import openSocket from 'socket.io-client'\r\nexport const socket = openSocket(\r\n    (process.env.NODE_ENV === 'development') ? 'localhost:8080' : '/'\r\n)","import React from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\nimport { RecordingButton } from '../components/buttons/RecordingButtonV2'\r\nimport { connect } from 'react-redux'\r\nimport Snackbar from '../components/notifications/snackbar'\r\nimport { socket } from '../serverSocket'\r\n\r\nconst RatingSchema = [\r\n    {type:'range', label:'Overall', name:'overall', min:0, max:10},\r\n    {type:'range', label:'Abdominal Pain', name:'abdPain', min:0, max:10},\r\n    {type:'range', label:'Bloating', name:'bloating', min:0, max:10},\r\n    {type:'range', label:'Wind', name:'wind', min:0, max:10},\r\n]\r\n\r\nconst RecordingNumberSchema = [\r\n    {type:'number', label:'Hardware Recording Number', name:'hardwareRecordingNumber'}\r\n]\r\n\r\nconst SymptomSchema = {\r\n    pain:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    bloating:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    constipation:[\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n    custom:[\r\n        {type:'text', label:'Symptom', name:'symptom'},\r\n        {type:'range', label:'Severity', name:'severity', min:0, max:10},\r\n        {type:'text', label:'Location', name:'location'},\r\n        {type:'text', label:'Notes', name:'notes'},\r\n    ],\r\n}\r\n\r\nconst Recording = props => {\r\n    console.log(props)\r\n\r\n    socket.on('res@client/recording/state', data => {\r\n        console.log(data)\r\n        props.ADD_RECORDING_ID(data.recordingId)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar />\r\n            {props.isReadyToRecord ? \r\n                <RecordingButton onClick={props.CHANGE_RECORDING_STATE}>{\r\n                    props.isRecording ? 'pause' : 'play'\r\n                }</RecordingButton> :\r\n                <SchemaFormV2 onReadyForm={props.ADD_HARDWARE_RECORDING_NUMBER} schema={RecordingNumberSchema}/>\r\n            }\r\n            <p>{props.symptomArray ? \r\n            `\"${props.symptomArray[props.symptomArray.length-1].symptom}\" was added at ${new Date()}` : \r\n            props.isRecording ? 'no symptoms yet...' : null}</p>\r\n            <div>{props.isRecording ? \r\n                <div>\r\n                    <p>Simple Symptoms</p>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'burp'})}>burp</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'fart'})}>fart</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'gurgle'})}>gurgle</button>\r\n                    <button onClick={e => props.ADD_SHORTCUT_SYMPTOM({symptom:'urge to poo'})}>urge to poo</button>\r\n                \r\n                    <p>Complex Symptoms</p>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'pain'})}>pain</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'bloating'})}>bloating</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'constipation'})}>constipation</button>\r\n                    <button onClick={e => props.EDIT_SYMPTOM({symptom:'custom'})}>custom</button>\r\n                    {(props.currSymptom && props.isComplex) ? \r\n                    <SchemaFormV2 onReadyForm={props.ADD_SYMPTOM} schema={SymptomSchema[props.currSymptom.symptom]}/> : \r\n                    null\r\n                    }\r\n                </div> : \r\n                props.isReadyToRecord ? \r\n                (props.recordingClickCounter > 1) ? \r\n                <SchemaFormV2 onReadyForm={e => {\r\n                    props.ADD_RATING(e)\r\n                    props.RESET()\r\n                }} schema={RatingSchema}/> :\r\n                'not recording'\r\n                :\r\n                null\r\n            }</div>\r\n            <br />\r\n            {/* <button onClick={props.RESET}>RESET STATE - DEBUGGING</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.currentRecording\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    RESET: e => dispatch({type:'RESET'}),\r\n    ADD_HARDWARE_RECORDING_NUMBER: e => dispatch({type:'ADD_HARDWARE_RECORDING_NUMBER', payload:e}),\r\n    CHANGE_RECORDING_STATE: e => dispatch({type:'CHANGE_RECORDING_STATE'}),\r\n    ADD_SHORTCUT_SYMPTOM: e => dispatch({type:'ADD_SHORTCUT_SYMPTOM', payload:e}),\r\n    EDIT_SYMPTOM: e => dispatch({type:'EDIT_SYMPTOM', payload:e}),\r\n    ADD_SYMPTOM: e => dispatch({type:'ADD_SYMPTOM', payload:e }),\r\n    ADD_RATING: e => dispatch({type:'ADD_RATING', payload:e}),\r\n    ADD_RECORDING_ID: e => dispatch({type:'ADD_RECORDING_ID', payload:e})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Recording)","import React, { useState, useEffect } from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Food = props => {\r\n\r\n    let [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.onSubmit && state.readyToSubmit===true){\r\n            props.onSubmit(state.food)\r\n            setState({readyToSubmit:false})\r\n        }\r\n\r\n    }, [props, state.readyToSubmit, state.food])\r\n\r\n    const onSubmit = e => {\r\n        if(e){\r\n            let newPayload = {...e}\r\n            setState({...state, food:newPayload, readyToSubmit:true})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Food</h1>\r\n            <SchemaFormV2 schema={[\r\n                {type:'text',name:'foodName',label:'Food Name'},\r\n                {type:'time',name:'timestamp',label:'Consumption Time',hint:'What time did you have it? - Click the white part... there\\'s a bug in iOS i cant fix...'},\r\n                {type:'text',name:'components',label:'Food Components',hint:'e.g. Nuts, Pepper, Oil, Wheat'},\r\n            ]} onReadyForm={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Food","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst FixedNav = styled.nav`\r\n    background:#f5f5f5\r\n    height:36pt;\r\n    position:fixed;\r\n    width:calc(100% - 24pt);\r\n    right:12pt;\r\n    bottom:12pt;\r\n    border-radius:18pt;\r\n    overflow:hidden;\r\n    box-sizing:border-box;\r\n    display:grid;\r\n    grid-template-columns:1fr 1fr 1fr 1fr;\r\n    box-shadow:0 9px 16px rgba(0,0,0,.18);\r\n    z-index:100;\r\n\r\n    & .navLink {\r\n        color:black;\r\n        font-size:18pt;\r\n        text-align:center;\r\n        text-decoration:none;\r\n        height:100%;\r\n        margin:0;\r\n        font-size:9pt;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    }\r\n\r\n    & .active {\r\n        background:#ff4757;\r\n        color:white;        \r\n    }\r\n`\r\n\r\nexport const FixedNavBar = props => {\r\n    return(\r\n        <FixedNav>\r\n            <NavLink exact className='navLink' to='/'><i className=\"material-icons\">home</i></NavLink>\r\n            <NavLink className='navLink' to='/recording'><i className='material-icons'>mic</i></NavLink>\r\n            <NavLink className='navLink' to='/addFood'><i className='material-icons'>fastfood</i></NavLink>\r\n            <NavLink className='navLink' to='/addContext'><i className='material-icons'>chrome_reader_mode</i></NavLink>\r\n        </FixedNav>\r\n    )\r\n}","import React from 'react'\r\nimport { SchemaFormV2 } from '../components/forms/SchemaFormV2'\r\n\r\nconst Schema = [\r\n    {type:'range', label:'Bristol Poop Rating', name:'poop', min:1, max:7},\r\n    {type:'range', label:'Poop Size', name:'poopSize', min:0, max:10},\r\n    {type:'range', label:'Stress Level', name:'stress', min:0, max:10},\r\n    {type:'range', label:'Sleep (hrs)', name:'sleep', min:0, max:24},\r\n    {type:'range', label:'Energy Rating', name:'energy', min:0, max:10},\r\n    {type:'text', label:'Notes', name:'notes'}\r\n]\r\n\r\nconst Context = props => {\r\n    return(\r\n        <div>\r\n            <h1 style={{textAlign:'center', color:'rgba(0,0,0,.86)'}}>Add Context</h1>\r\n            <SchemaFormV2 \r\n                schema={Schema}\r\n                onReadyForm={props.onSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Context","import React from 'react'\r\n\r\nconst Home = props => {\r\n    return(\r\n        <div style={{padding:'0 12pt'}}>\r\n\r\n            <div>\r\n            <h1>Instructions on how to use this!!!</h1>\r\n            <h2>Navigation Buttons</h2>\r\n            <ul>\r\n                <li><i className='material-icons'>home</i>: Home Page</li>\r\n                <li><i className='material-icons'>mic</i>: Add a Recording</li>\r\n                <li><i className='material-icons'>fastfood</i>: Add Food Log</li>\r\n                <li><i className='material-icons'>chrome_reader_mode</i>: Add Context (e.g poop, energy and sleep)</li>\r\n            </ul>\r\n            </div>\r\n\r\n            It's also OKAY to switch between different tabs - even out of the browser!!! State management has you covered 😁😁😁\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { socket } from '../serverSocket'\r\nimport { connect } from 'react-redux'\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst Login = props => {\r\n\r\n    let [cookies, setCookies] = useCookies({loggedIn:false, jwt:null})\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm()\r\n\r\n    const onSubmit = e => {\r\n        socket.emit('client/login/submit', e)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Welcome to the Noisy Guts Project!</h1>\r\n            <p>Please Login</p>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input type='text' name='username' ref={register({required:true})}/>\r\n                <input type='password' name='password' ref={register({required:true})}/>\r\n                <input type='submit'/>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ADD_JWT: e => dispatch({type:\"ADD_JWT\", payload:e})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Recording from './pages/Recording';\r\nimport Food from './pages/Food';\r\nimport { FixedNavBar } from './navBar/FixedNavBar';\r\nimport styled, {createGlobalStyle} from 'styled-components'\r\nimport Context from './pages/Context';\r\nimport { socket } from './serverSocket';\r\nimport { connect } from 'react-redux'\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none; \r\n    -ms-user-select: none; \r\n    user-select: none;\r\n  }\r\n  body {\r\n    background: #ecf0f1;\r\n  }\r\n`\r\n\r\nconst StyledAppDiv = styled.div`\r\n  @import url('https://fonts.googleapis.com/css?family=Varela+Round&display=swap');\r\n  font-family: 'Arial', sans-serif;\r\n  margin-top:32pt;\r\n  margin-bottom:90pt;\r\n`\r\n\r\nconst RecordingStatusBar = styled.div`\r\n  background:${props => props.recording ? '#ffa502' : null}\r\n  color:white;\r\n  position:fixed;\r\n  width:100vw;\r\n  box-sizing:border-box;\r\n  top:0;\r\n  left:0;\r\n  & p {\r\n    margin:3pt 0;\r\n    text-align:center;\r\n  }\r\n`\r\n\r\nconst App = props => {\r\n\r\n  let [cookies, setCookies] = useCookies()\r\n\r\n  const onFoodSubmit = foods => {\r\n    socket.emit('client/submit/food', {...foods, timestamp:foods.timestamp})\r\n  }\r\n\r\n  const onContextSubmit = context => {\r\n    socket.emit('client/submit/context', {...context, timestamp: context.timestamp || new Date()})\r\n  }\r\n\r\n  socket.on('server/login/response', response => {\r\n    console.log(response)\r\n    setCookies(['jwt'], response.jwt)\r\n    setCookies(['loggedIn'], response.loggedIn)\r\n    console.log(cookies)\r\n  })\r\n\r\n  if(cookies.loggedIn){\r\n\r\n    return(\r\n      <Router>\r\n        <StyledAppDiv className='App'>\r\n  \r\n          <RecordingStatusBar recording={props.currentRecording.isReadyToRecord}>\r\n            <p>{props.currentRecording.isReadyToRecord ? `You're recording...` : null}</p>\r\n          </RecordingStatusBar>\r\n  \r\n          <FixedNavBar />\r\n  \r\n          <Switch>\r\n  \r\n            <Route exact path='/'><Home /></Route>\r\n            <Route path='/recording'><Recording/></Route>\r\n            <Route path='/addFood'><Food onSubmit={onFoodSubmit}/></Route>\r\n            <Route path='/addContext'><Context onSubmit={onContextSubmit}/></Route>\r\n            <Route path='/login'><Login /></Route>\r\n  \r\n          </Switch>\r\n          <GlobalStyle />\r\n        </StyledAppDiv>\r\n      </Router>\r\n    )\r\n\r\n  } else {\r\n    return (\r\n      <Login />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  ADD_JWT: e => dispatch({type:\"ADD_JWT\", payload:e})\r\n})\r\n\r\nexport default connect(mapStateToProps)(App)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { socket } from \"../serverSocket\"\r\n\r\nconst defaultState = {}\r\n\r\nexport const currentRecording = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'RESET':\r\n            state = defaultState\r\n            return state\r\n\r\n        case 'ADD_HARDWARE_RECORDING_NUMBER':\r\n\r\n            state = {\r\n                ...state, \r\n                hardwareRecordingNumber:action.payload.hardwareRecordingNumber,\r\n                isReadyToRecord:true\r\n            }\r\n            return state\r\n\r\n        case 'CHANGE_RECORDING_STATE':\r\n            let recordingState = state.isRecording ? false : true\r\n\r\n            state = {\r\n                ...state, isRecording:recordingState,\r\n                recordingClickCounter: state.recordingClickCounter+1 || 1,\r\n            }\r\n\r\n            socket.emit('client/recording/state', {isRecording: state.isRecording, hardwareRecordingNumber:state.hardwareRecordingNumber, recordingId:state.recordingId || null})\r\n\r\n            return state\r\n\r\n        case 'ADD_SHORTCUT_SYMPTOM':\r\n\r\n            let uploadPayload = {\r\n                ...action.payload, \r\n                timestamp:new Date(), \r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber\r\n            }\r\n\r\n            state = {...state, \r\n                symptomArray: state.symptomArray ?\r\n                [...state.symptomArray, {...uploadPayload}] :\r\n                [{...uploadPayload}],\r\n                isComplex:false\r\n            }\r\n\r\n            socket.emit('client/submit/symptom', uploadPayload)\r\n            return state\r\n\r\n        case 'EDIT_SYMPTOM':\r\n\r\n            let newSymptom = {\r\n                ...state.currSymptom || null,\r\n                ...action.payload,\r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                timestamp:new Date()\r\n            }\r\n\r\n            state = { \r\n                ...state, \r\n                currSymptom:newSymptom,\r\n                isComplex: state.isComplex ? false : true\r\n            }\r\n            return state\r\n            \r\n        case 'ADD_SYMPTOM':\r\n\r\n            let symptomUpload = {\r\n                ...state.currSymptom, \r\n                ...action.payload, \r\n                recordingId: state.recordingId || null,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                timestamp:new Date()\r\n            }\r\n\r\n            state = {...state,\r\n                symptomArray: state.symptomArray ?\r\n                [...state.symptomArray, symptomUpload || null] :\r\n                [symptomUpload || null],\r\n                isComplex:false\r\n            }\r\n\r\n            socket.emit('client/submit/symptom', {\r\n                ...state.currSymptom, \r\n                ...action.payload, \r\n                hardwareRecordingNumber:state.hardwareRecordingNumber,\r\n                recordingId:state.recordingId || null,\r\n                timestamp: new Date()\r\n            })\r\n\r\n            state.currSymptom = {}\r\n\r\n            return state\r\n        \r\n        case 'ADD_RATING':\r\n\r\n            state = {\r\n                ...state, \r\n                rating: action.payload,\r\n                isReadyToRecord:false,\r\n                isRecording:false,\r\n                recordingClickCounter:0\r\n            }\r\n\r\n            socket.emit('client/submit/rating', {\r\n                ...action.payload,\r\n                hardwareRecordingNumber:state.hardwareRecordingNumber, \r\n                recordingId:state.recordingId || null\r\n            })\r\n\r\n            return state\r\n\r\n        case 'ADD_RECORDING_ID':\r\n            \r\n            state = {\r\n                ...state, \r\n                recordingId:action.payload\r\n            }\r\n\r\n            return state\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers} from 'redux'\r\nimport { currentRecording } from './store/recordingReducer'\r\n\r\nconst defaultState = {}\r\n\r\nconst defaultReducer = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst metaReducer = (state = defaultState, action) => {\r\n    switch(action.type){        \r\n        case 'ADD_JWT':\r\n            let { loggedIn, jwt} = action.payload\r\n            state = {...state, loggedIn:loggedIn, jwt:jwt}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    default:defaultReducer,\r\n    metaReducer:metaReducer,\r\n    currentRecording:currentRecording\r\n})\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store';\r\n\r\nReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}