{"version":3,"sources":["pages/Welcome.js","components/formInputs/textInput.js","components/buttons/buttons.js","pages/pageBase.js","pages/Login/Login.js","components/menu.js","pages/CreateAccount/CreateAccount.js","pages/Context.js","pages/Food/Food.js","pages/Recording/Recording.js","App.js","serviceWorker.js","store/store.js","index.js"],"names":["Container","Keyframes","Spring","next","a","async","boxShadow","from","config","duration","tension","reset","PageContainer","styled","div","Welcome","props","slideIn","useSpring","top","opacity","fadein","style","id","className","styles","to","StyledInput","VariableInputField","React","forwardRef","ref","extras","type","configs","options","map","object","index","key","label","TextInput","styling","inputConfig","name","error","hint","ButtonRowContainer","SubmitButton","input","FlatLink","Link","height","BasePage","animated","connect","state","dispatch","LOGIN","login","payload","useForm","register","handleSubmit","errors","transform","left","onSubmit","data","console","log","fakeLogin","attempt","Promise","resolve","setTimeout","details","username","status","placeholder","required","value","StyledNav","nav","StyledMenuButton","mapStateToProps","mapDispatchToProps","TOGGLE_MENU","MenuButton","buttonAnimation","app_state","menu_open","color","wobbly","onClick","icon","faBars","Menu","menuSlide","right","gentle","alt","src","fontWeight","fontSize","margin","firstName","lastName","faStethoscope","faHamburger","faInfoCircle","bottom","Context","pattern","width","Food","LogControl","RecordButton","button","UndoButton","SimpleSymptomButton","SymptomHolder","TimeHolder","FeedbackBar","WaitingAnimation","mass","friction","Waiting","Recording","useState","useTransition","item","opcaity","enter","leave","background","padding","position","boxSizing","faUndoAlt","display","alignItems","justifyContent","lastUnit","textTransform","Minutes","Seconds","faStop","marginTop","marginLeft","faPlusCircle","RootDiv","exact","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","default","action","loggedIn","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a89d011.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { Keyframes } from 'react-spring/renderprops'\r\n\r\nconst Container = Keyframes.Spring(async next => {\r\n    while (true) {\r\n        await next({\r\n            boxShadow: '0px 0px 9pt rgba(123, 237, 159, 0)',\r\n            from: { boxShadow: '0px 0px 18pt rgba(123, 237, 159,1)' },\r\n            config:{duration:2000, tension:100}\r\n        })\r\n        await next({\r\n            boxShadow: '0px 0px 18pt rgba(123, 237, 159,1)',\r\n            from: { boxShadow: '0px 0px 9pt rgba(123, 237, 159, 0)' },\r\n            config:{duration:2000, tension:100},\r\n            reset:true,\r\n        })\r\n    }\r\n})\r\n\r\nconst PageContainer = styled.div`\r\n\r\n    padding:0 45pt;\r\n    margin:0;\r\n    position:relative;\r\n    width:100vw;\r\n    height:100vh;\r\n    box-sizing:border-box;\r\n\r\n    #container1 {\r\n        position:absolute;\r\n        width:100vw;\r\n        padding:0 36pt;\r\n        box-sizing:border-box;\r\n        top:40vh;\r\n        left:0;\r\n\r\n        .welcomeHeading {\r\n            font-size:9pt;\r\n            font-weight:bold;\r\n            margin:0;\r\n            margin-bottom:12pt;\r\n            text-align:center;\r\n        }\r\n        .welcomeAim {\r\n            font-size:9pt;\r\n            margin:0;\r\n            text-align:center;\r\n            line-height:12pt;\r\n        }\r\n\r\n    }\r\n\r\n    #container2 {\r\n\r\n        position:absolute;\r\n        width:100vw;\r\n        left:0;\r\n        bottom:45pt;\r\n        box-sizing:border-box;\r\n        font-size:9pt;\r\n        text-align:center;\r\n\r\n        .loginButton {\r\n            font-size:9pt;\r\n            text-decoration:none;\r\n            color:white;\r\n            text-transform:uppercase;\r\n            font-weight:bold\r\n        }\r\n\r\n        .createAccountButton{\r\n            font-size:9pt;\r\n            text-decoration:none;\r\n            color:white;\r\n            text-transform:uppercase;\r\n            font-weight:bold\r\n            padding: 9pt 24pt;\r\n            border-radius:100pt;\r\n            background:#7BED9F;\r\n            margin:3pt;\r\n            display:inline-block;\r\n            box-shadow: 0px 0px 9pt #7BED9F;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nconst Welcome = props => {\r\n\r\n    let slideIn = useSpring({\r\n        top: '40vh',\r\n        opacity: 1,\r\n        from: { top: '-100vh', opacity: 0 },\r\n    })\r\n\r\n    let fadein = useSpring({\r\n        opacity: 1,\r\n        from: { opacity: 0 },\r\n        config: { duration: 1000 },\r\n    })\r\n\r\n    return (\r\n        <PageContainer>\r\n\r\n            <animated.div style={slideIn} id='container1'>\r\n                <p className='welcomeHeading'>Welcome to the Noisy Guts Project!</p>\r\n                <p className='welcomeAim'>Your help means alot to us and the project! With your help, we can bring a faster and more accurate diagnosis of Irratable Bowel Syndrome!</p>\r\n            </animated.div>\r\n\r\n            <animated.div style={fadein} id='container2'>\r\n                <p>First, We need to identify who you are...</p>\r\n\r\n                <Container>\r\n                    {styles => <Link style={styles} className='createAccountButton' to='/newUser'>Create Account</Link>}\r\n                </Container>\r\n\r\n                <p>OR</p>\r\n                <Link className='loginButton' to='/login'>Login</Link>\r\n            </animated.div>\r\n\r\n        </PageContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.div`\r\n\r\n    width:100%;\r\n    font-size:9pt;\r\n    margin-top:18pt;\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    background:none;\r\n    border:none;\r\n\r\n    :first-of-type{\r\n        margin:none;\r\n    }\r\n\r\n    input, select {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        border:none;\r\n        background:none;\r\n        box-shadow:none;\r\n        display:flex;\r\n        align-items:center;\r\n        height:24pt;\r\n        width:100%;\r\n        border-radius:9pt;\r\n        padding: 0 9pt;\r\n        box-sizing:border-box;\r\n        border:solid 0.5px rgba(0,0,0,.12);\r\n\r\n        ::placeholder{\r\n            color:rgba(0,0,0,.12)\r\n        }\r\n    }\r\n\r\n    .label {\r\n        margin-bottom:6pt;\r\n        padding-left:9pt;\r\n        text-transform:uppercase;\r\n\r\n        span {\r\n            color:red;\r\n        }\r\n\r\n    }\r\n`\r\n\r\nconst VariableInputField = React.forwardRef((props, ref) => {\r\n\r\n    let { extras, type, ...configs } = props\r\n\r\n    switch (props.type) {\r\n\r\n        case 'select':\r\n            return (\r\n                <select ref={ref} {...configs} >\r\n                    {props.extras.options.map((object, index) => {\r\n                        return <option key={index} {...object}>{object.label}</option>\r\n                    })}\r\n                </select>\r\n            )\r\n\r\n        default:\r\n            return <input ref={ref} {...props} />\r\n\r\n    }\r\n})\r\n\r\nexport const TextInput = props => {\r\n\r\n    const { ref, ...inputConfig } = props.styling\r\n\r\n    return (\r\n        <StyledInput>\r\n            <label to={props.name}>\r\n                <p className='label'>{props.label} {props.error[inputConfig.name] && <span>~ {`${props.error[inputConfig.name].type}`}</span>}</p>\r\n            </label>\r\n            <VariableInputField ref={ref} {...inputConfig} />\r\n            {props.hint && <p className='hint'>{props.hint}</p>}\r\n        </StyledInput>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\r\nimport { animated, useSpring } from 'react-spring'\r\n\r\nexport const ButtonRowContainer = styled.div`\r\n    display:inline-flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n    margin-top:24pt;\r\n    padding:0 9pt;\r\n    width:100%;\r\n    box-sizing:border-box;\r\n`\r\n\r\nexport const SubmitButton = styled.input`\r\n    border:none;\r\n    font-size:9pt;\r\n    text-transform:uppercase;\r\n    font-weight:bold;\r\n    background: linear-gradient(90deg, #241034 0%, #1C0638 100%);\r\n    color:white;\r\n    padding:9pt 36pt;\r\n    border-radius:100vh;\r\n    text-align:center;\r\n    display:inline-block;\r\n    box-shadow: 0 0 9pt rgba(0,0,0,.12)\r\n`\r\n\r\nexport const FlatLink = styled(Link)`\r\n    font-weight:bold;\r\n    text-transform:uppercase;\r\n    text-decoration:none;\r\n    font-size: 9pt;\r\n    color:rgba(0,0,0,.24);\r\n`\r\n\r\nconst ToggleSwitchContainer = styled.div`\r\n    border:1px solid rgba(0,0,0,.09);\r\n    display:inline-block;\r\n    position:relative;\r\n    height:${props => props.height ? `${props.height}pt` : '24pt'};\r\n    width:${props => props.height ? `${props.height * 2}pt` : '48pt'};\r\n    border-radius:24pt;\r\n    overflow:hidden;\r\n    user-select:none;\r\n    -webkit-tap-highlight-color:transparent;\r\n\r\n    .switch {\r\n        background:#1C0638;\r\n        color:white;\r\n        display:flex;\r\n        position:absolute;\r\n        height:${props => props.height ? `${props.height - 6}pt` : '18pt'};\r\n        width:${props => props.height ? `${props.height - 6}pt` : '18pt'};\r\n        top:3pt;\r\n        border-radius:48pt;\r\n        align-items:center;\r\n        justify-content:center;\r\n        right:3pt;\r\n        box-shadow:0 0 9pt rgba(0,0,0,.12);\r\n\r\n        span {\r\n            margin:0;\r\n            padding:0;\r\n            :first-child {\r\n                margin:0; \r\n                paddding:0;\r\n                display:flex;\r\n                align-items:center;\r\n                justify-content:center;\r\n            }\r\n        }\r\n\r\n    }\r\n`\r\n\r\nexport const ToggleSwitch = props => {\r\n\r\n    let [state, setState] = useState(true)\r\n\r\n    const switchSlide = useSpring({\r\n        right:state ? `3pt` : `${props.height+3 || 24+3}pt`,\r\n        from:{right: !state ? `3pt` : `${props.height+3 || 24+3}pt` },\r\n        config:{tension:1500, mass:0.5, friction:30}\r\n    })\r\n\r\n    return (\r\n        <ToggleSwitchContainer height={props.height} onClick={() => {setState(state ? false : true)}}>\r\n            <animated.div className='switch' style={switchSlide} >\r\n                <span><FontAwesomeIcon icon={faSun} /></span>\r\n            </animated.div>\r\n        </ToggleSwitchContainer>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nimport { animated } from 'react-spring'\r\n\r\nexport const BasePage = styled(animated.div)`\r\n\r\n    position:absolute;\r\n    margin:0;\r\n    padding:0 24pt;\r\n    box-sizing:border-box;\r\n    background:white;\r\n    color:black;\r\n    min-height:100vh;\r\n    padding-top:81pt;\r\n    top:0;\r\n    left:0;\r\n    width:100vw;\r\n\r\n    .subHeading {\r\n        text-transform:uppercase;\r\n        color:rgba(0,0,0,.12);\r\n        text-align:center;\r\n        margin:0;\r\n        font-size:9pt;\r\n        font-weight:bold;\r\n    }\r\n\r\n    .heading {\r\n        text-transform:uppercase;\r\n        font-size:18pt;\r\n        text-align:center;\r\n        margin:0;\r\n        margin-top:9pt;\r\n    }\r\n\r\n    form {\r\n        margin-top:51pt;\r\n    }\r\n`","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput } from '../../components/formInputs/textInput'\r\n// import { MenuButton } from '../../components/menu'\r\n// import { LoginContainer } from './loginContainer'\r\n// import styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport { useSpring } from 'react-spring'\r\nimport { SubmitButton, FlatLink, ButtonRowContainer } from '../../components/buttons/buttons'\r\nimport { BasePage } from '../pageBase'\r\n\r\nconst Login = props => {\r\n\r\n    const { register, handleSubmit, errors, reset } = useForm()\r\n    const onSubmit = async data => {\r\n        console.log(data)\r\n        const fakeLogin = attempt => {\r\n            return new Promise(resolve => {\r\n                setTimeout(resolve({\r\n                    details: { username: attempt.username },\r\n                    status: true,\r\n                }), 3000)\r\n            })\r\n        }\r\n        props.LOGIN(await fakeLogin(data))\r\n        reset()\r\n    }\r\n\r\n    const slideIn = useSpring({\r\n        transform:'scale(1)',\r\n        left:'0%',\r\n        from: {left:'100%',transform:'scale(0)'},\r\n    })\r\n\r\n    return (\r\n        <BasePage style={slideIn}>\r\n\r\n            <p className='subHeading'>Authentification</p>\r\n            <h1 className='heading'>Login</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <TextInput label='username' error={errors} styling={{\r\n                    name: 'username',\r\n                    type: 'text',\r\n                    placeholder: 'Enter a username...',\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='password' error={errors} styling={{\r\n                    name: 'password',\r\n                    type: 'password',\r\n                    placeholder: 'Enter a password...',\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <ButtonRowContainer>\r\n                    <FlatLink to='/newUser'>Create Account</FlatLink> \r\n                    <SubmitButton type='submit' value='login'/>\r\n                </ButtonRowContainer>\r\n\r\n            </form>\r\n\r\n        </BasePage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\nconst mapDispatchToProps = dispatch => ({\r\n    LOGIN: login => dispatch({ type: 'LOGIN', payload: login })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHamburger, faBars, faStethoscope, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport styled from 'styled-components'\r\nimport { animated, useSpring, config } from 'react-spring'\r\nimport { connect } from 'react-redux'\r\n\r\nconst StyledNav = styled(animated.nav)`\r\n\r\n  z-index:100;\r\n  position:fixed;\r\n  top:0;\r\n  height:100vh;\r\n  box-sizing:border-box;\r\n  padding:0 24pt;\r\n  color:white;\r\n  background:linear-gradient(90deg, #241034 0%, #1C0638 100%);\r\n  width:100vw;\r\n  box-shadow:0 0 12pt rgba(0,0,0,.12);\r\n\r\n  .profile{\r\n    width:100%;\r\n    display:flex;\r\n    align-items:center;\r\n    margin-top:111pt;\r\n    margin-bottom:36pt;\r\n\r\n    .profilePictures {\r\n      height:24pt;\r\n      width:24pt;\r\n      border-radius:18pt;\r\n      margin-right:12pt;\r\n    }\r\n\r\n    .profileText {\r\n      position:relative;\r\n      display:inline-block;\r\n    }\r\n\r\n  }\r\n\r\n  .navLinkContainer {\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-top:87pt;\r\n    \r\n    .NavLink {\r\n      margin:6pt 0;\r\n      text-decoration:none;\r\n      color:white;\r\n      font-weight:bold;\r\n\r\n      span {\r\n        margin-left:12pt;\r\n      };\r\n\r\n    }\r\n\r\n  }\r\n`\r\n\r\nconst StyledMenuButton = styled(animated.div)`\r\n  position:fixed;\r\n  top:0pt;\r\n  z-index:101;\r\n  left:18pt;\r\n  font-size:18pt;\r\n`\r\n\r\nexport const StatelessMenu = props => {\r\n\r\n  const menuSlide = useSpring({\r\n    right: props.app_state.menu_open ? '0%' : '130%',\r\n    from: { right: props.app_state.menu_open ? '130%' : '0%'},\r\n    config: config.gentle,\r\n  })\r\n\r\n  return (\r\n    <div onClick={props.TOGGLE_MENU}>\r\n      <StyledNav style={menuSlide}>\r\n        <div className='profile'>\r\n          <img alt='profile' className='profilePictures' src='https://source.unsplash.com/mEZ3PoFGs_k/250x250' />\r\n          <div className='profileText'>\r\n            <p className='profileName' style={{ fontWeight: 'bold', fontSize: '12pt', margin: 0 }}>{props.app_state.firstName ?? 'Profile'} {props.app_state.lastName ?? 'Name'}</p>\r\n            <p className='profileUsername' style={{ fontWeight: 'regular', fontSize: '9pt', margin: 0 }}>@{props.app_state.username ?? 'profile_username'}</p>\r\n          </div>\r\n        </div>\r\n        <div className='navLinkContainer'>\r\n          <NavLink className='NavLink' to='/log'> <FontAwesomeIcon icon={faStethoscope} /> <span>Add Recording Log</span> </NavLink>\r\n          <NavLink className='NavLink' to='/food'> <FontAwesomeIcon icon={faHamburger} /> <span>Add Food</span></NavLink>\r\n          <NavLink className='NavLink' to='/context'><FontAwesomeIcon icon={faInfoCircle} /> <span>Add Contextual Info</span></NavLink>\r\n        </div>\r\n      </StyledNav>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StatelessMenuButton = props => {\r\n\r\n  const buttonAnimation = useSpring({\r\n    transform: props.app_state.menu_open ? 'rotate(90deg)' : 'rotate(0deg)',\r\n    color: props.app_state.menu_open ? 'white' : props.color ?? 'black',\r\n    from: {\r\n      transform: !props.app_state.menu_open ? 'rotate(90deg)' : 'rotate(0deg)',\r\n      color: !props.app_state.menu_open ? 'white' : props.color ?? 'black',\r\n    },\r\n    config: config.wobbly,\r\n  })\r\n\r\n  return (\r\n    <StyledMenuButton style={buttonAnimation} onClick={props.TOGGLE_MENU} className='menuButton'>\r\n      <p><FontAwesomeIcon icon={faBars} /></p>\r\n    </StyledMenuButton>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\nconst mapDispatchToProps = dispatch => ({\r\n  TOGGLE_MENU: () => dispatch({ type: 'TOGGLE_MENU' })\r\n})\r\n\r\nexport const MenuButton = connect(mapStateToProps, mapDispatchToProps)(StatelessMenuButton)\r\nexport const Menu = connect(mapStateToProps, mapDispatchToProps)(StatelessMenu)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useSpring } from 'react-spring'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput } from '../../components/formInputs/textInput'\r\nimport { FlatLink, SubmitButton, ButtonRowContainer } from '../../components/buttons/buttons'\r\nimport { BasePage } from '../pageBase'\r\n\r\nconst CreateAccount = props => {\r\n\r\n    const { register, handleSubmit, errors, reset } = useForm()\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        reset()\r\n    }\r\n\r\n    const slideIn = useSpring({\r\n        transform:'scale(1)',\r\n        left:'0%',\r\n        bottom:'0%',\r\n        from: {bottom:'100%',left:'100%',transform:'scale(0)'},\r\n        config:{tension:100}\r\n    })\r\n\r\n    return (\r\n        <BasePage style={slideIn}>\r\n\r\n            <p className='subHeading'>Authentification</p>\r\n            <h1 className='heading'>Create Account</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <TextInput label='First Name' error={errors} styling={{\r\n                    name: 'firstName',\r\n                    type: 'text',\r\n                    placeholder: `Enter your first name...`,\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='Last Name' error={errors} styling={{\r\n                    name: 'lastName',\r\n                    type: 'text',\r\n                    placeholder: `Enter your last name...`,\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='username' error={errors} styling={{\r\n                    name: 'username',\r\n                    type: 'text',\r\n                    placeholder: `Make up a username...`,\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='Password' error={errors} styling={{\r\n                    name: 'password',\r\n                    type: 'password',\r\n                    placeholder: `Try to remember this one...`,\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <ButtonRowContainer>\r\n                    <FlatLink to='/login'>Login</FlatLink>\r\n                    <SubmitButton type='submit' value='Create an Account' />\r\n                </ButtonRowContainer>\r\n\r\n            </form>\r\n\r\n        </BasePage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state })\r\n\r\nexport default connect(mapStateToProps)(CreateAccount)","import React from 'react'\r\nimport { BasePage } from './pageBase'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput } from '../components/formInputs/textInput'\r\nimport { ButtonRowContainer, SubmitButton } from '../components/buttons/buttons'\r\n\r\n\r\n\r\nconst Context = props => {\r\n\r\n    let { register, handleSubmit, errors, reset} = useForm()\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <BasePage>\r\n            <p className='subHeading'>Contextual Information</p>\r\n            <h1 className='heading'>Add Context Log</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <TextInput label='Bristol Poop Rating' error={errors} styling={{\r\n                    name: 'poopRating',\r\n                    type: 'select',\r\n                    ref: register,\r\n                    extras: {\r\n                        options: [\r\n                            { label: 'Pick an Option', value: '' },\r\n                            { label: 'Type 0 - No Poop', value: '0' },\r\n                            { label: 'Type 1 - Separate Hard Lumps', value: '1' },\r\n                            { label: 'Type 2 - Sausage-Shaped and Lumpy', value: '2' },\r\n                            { label: 'Type 3 - Sausage-Link and Cracked', value: '3' },\r\n                            { label: 'Type 4 - Sausage-Shaped and Smooth', value: '4' },\r\n                            { label: 'Type 5 - Soft Blobs with Clear Edges', value: '5' },\r\n                            { label: 'Type 6 - Fluffy Pieces - Mushy', value: '6' },\r\n                            { label: 'Type 7 - Watery - Entirely Liquid', value: '7' },\r\n                        ]\r\n                    },\r\n                }} />\r\n\r\n                <TextInput label='Stress Level' error={errors} styling={{\r\n                    name: 'stress',\r\n                    type: 'select',\r\n                    ref: register,\r\n                    extras: {\r\n                        options: [\r\n                            { label: 'Pick an Option', value: '' },\r\n                            { label: 'Low - Little To No Stress', value: '0' },\r\n                            { label: 'Medium - Moderate Stress', value: '5' },\r\n                            { label: 'High - Alot of Stress', value: '10' },\r\n                        ]\r\n                    },\r\n                }} />\r\n\r\n                <TextInput label='Hours of Sleep' error={errors} styling={{\r\n                    name: 'sleep',\r\n                    type: 'number',\r\n                    ref: register,\r\n                    pattern:'[0-9]*',\r\n                    placeholder: 'Type in the NUMBER of hours you\\'ve slept... '\r\n                }} />\r\n\r\n                <TextInput label='Energy Level' error={errors} styling={{\r\n                    name: 'energy',\r\n                    type: 'select',\r\n                    ref: register,\r\n                    extras: {\r\n                        options: [\r\n                            { label: 'Pick an Option', value: '' },\r\n                            { label: 'Low - Extremely Tired', value: '0' },\r\n                            { label: 'Medium - Standard Energy', value: '5' },\r\n                            { label: 'High - Too much energy', value: '10' },\r\n                        ]\r\n                    },\r\n                }} />\r\n\r\n\r\n                <ButtonRowContainer>\r\n                    <SubmitButton type='submit' style={{ margin: '0 auto', width: '100%' }} />\r\n                </ButtonRowContainer>\r\n\r\n            </form>\r\n\r\n        </BasePage>\r\n    )\r\n}\r\n\r\nexport default Context","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { TextInput } from '../../components/formInputs/textInput'\r\nimport { SubmitButton, ButtonRowContainer } from '../../components/buttons/buttons'\r\nimport { BasePage } from '../pageBase'\r\n\r\nexport const Food = props => {\r\n\r\n    let { handleSubmit, register, errors, reset} = useForm()\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <BasePage>\r\n\r\n            <p className='subHeading'>Food Intake</p>\r\n            <h1 className='heading'>Food Consumption</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <TextInput label='What did you Eat?' error={errors} styling={{\r\n                    name: 'foodName',\r\n                    type: 'text',\r\n                    placeholder: `What was the name of the food`,\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='Time of Consumption' error={errors} styling={{\r\n                    name: 'time',\r\n                    type: 'time',\r\n                    placeholder: 'What time did you have it at?',\r\n                    ref: register({ required: true })\r\n                }} />\r\n\r\n                <TextInput label='Fodmap Type' error={errors} styling={{\r\n                    name: 'fodmapType',\r\n                    type: 'select',\r\n                    ref: register({required:true}),\r\n                    extras: {\r\n                        options: [\r\n                            { label: 'Choose One...', value: '' },\r\n                            { label: 'None', value: 'none' },\r\n                            { label: 'Fructose', value: 'fructose' },\r\n                            { label: 'Lactose', value: 'lactose' },\r\n                            { label: 'Polyols', value: 'polyol' },\r\n                            { label: 'Fructan', value: 'fructan' },\r\n                            { label: 'Galactan', value: 'galactan' },\r\n                        ]\r\n                    },\r\n                }} />\r\n\r\n                <ButtonRowContainer>\r\n                    <SubmitButton style={{ width: '100%' }} type='submit' value='Submit' />\r\n                </ButtonRowContainer>\r\n\r\n            </form>\r\n        </BasePage>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { BasePage } from '../pageBase'\r\nimport { ToggleSwitch } from '../../components/buttons/buttons'\r\nimport { faMicrophoneAlt, faStop, faUndoAlt, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport styled from 'styled-components'\r\nimport { animated, useSpring, useTransition } from 'react-spring'\r\nimport Timer from 'react-compound-timer'\r\nimport { Keyframes } from 'react-spring/renderprops'\r\n\r\nconst LogControl = styled(animated.div)`\r\n    position:absolute;\r\n    top:0;\r\n    width:100vw;\r\n    left:0;\r\n    height:35vh;\r\n    border-radius:0 0 12pt 12pt;\r\n    background:white;\r\n    padding:0;\r\n    margin:0;\r\n`\r\n\r\nconst RecordButton = styled(animated.button)`\r\n    height:36pt;\r\n    width:36pt;\r\n    border:none; \r\n    background:linear-gradient(90deg, #241034 0%, #1C0638 100%);\r\n    box-shadow: 0px 0px 9pt #575757 ;\r\n    color:white;\r\n    border-radius:36pt;\r\n    padding:0;\r\n    margin:0;\r\n    font-size:18pt;\r\n`\r\n\r\nconst UndoButton = styled(animated.button)`\r\n    position:absolute;\r\n    right:18pt;\r\n    top:18pt;\r\n    font-size:15pt;\r\n    color:rgba(0,0,0,.18);\r\n    background:none;\r\n    border:none;\r\n`\r\n\r\nconst SimpleSymptomButton = styled.button`\r\n    height:100pt;\r\n    flex-shrink:0;\r\n    flex-grow:0;\r\n    border-radius:12pt;\r\n    border:none;\r\n    background:white;\r\n    padding:12pt;\r\n    margin:6pt;\r\n\r\n    : first-of-type {\r\n        margin-left:24pt;\r\n    }\r\n\r\n    : last-of-type {\r\n        margin-right:12pt;\r\n    }\r\n\r\n\r\n    div {\r\n\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:space-between;\r\n        margin-top:64pt;\r\n        width:100%;\r\n        font-size:9pt;\r\n\r\n        p {\r\n            margin:0;\r\n            text-transform:uppercase;\r\n            font-weight:bold;\r\n        }\r\n    \r\n        .buttonIcon { \r\n            margin:0;\r\n            margin-right:12pt;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nconst SymptomHolder = styled.div`\r\n    overflow-x:scroll;\r\n    display:flex;\r\n`\r\n\r\nconst TimeHolder = styled.div`\r\n    display:flex;\r\n    box-sizing:border-box;\r\n    margin:0;\r\n    padding:0;\r\n\r\n    .mins {\r\n        margin:0;\r\n        font-size:30pt;\r\n        height:100%;\r\n        margin-right:3pt\r\n    }\r\n\r\n    .auxHolder { \r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items:flex-start\r\n        font-size:9pt;\r\n        justify-content:space-around;\r\n        padding: 3pt 0;\r\n        box-sizing:border-box;\r\n\r\n        .minLabel {\r\n            margin:0;\r\n            text-transform:uppercase\r\n            font-weight:bold;\r\n        }\r\n\r\n        .sec { \r\n            margin:0;\r\n        }\r\n\r\n    }\r\n`\r\n\r\nconst FeedbackBar = styled.div`\r\n    position:absolute;\r\n    width:100%;\r\n    height:60pt;\r\n    bottom:0;\r\n    left:0;\r\n    box-sizing:border-box;\r\n    border-radius:0 0 12pt 12pt;\r\n`\r\n\r\nconst WaitingAnimation = Keyframes.Spring(async next => {\r\n    while (true) {\r\n\r\n        await next({\r\n            transform: 'scale(1) rotate(0deg)',\r\n            bottom:'24pt',\r\n            opacity:1,\r\n            from: { transform: 'scale(0) rotate(360deg)', bottom:'-12pt', opacity:0},\r\n            config: { tension: 500, mass: 2, friction: 12 }\r\n        })\r\n\r\n        await next({\r\n            transform: 'scale(0) rotate(360deg)',\r\n            bottom:'-12pt',\r\n            opacity:0,\r\n            from: { transform: 'scale(1) rotate(0deg)', bottom:'24pt', opacity:1},\r\n            config: { tension: 500, mass: 2, friction: 12 }\r\n        })\r\n    }\r\n})\r\n\r\nconst Waiting = styled(animated.div)`\r\n    position:absolute;\r\n    text-align:center;\r\n    width:100%;\r\n    height:24pt;\r\n    width:24pt;\r\n    background:#241034;\r\n    left:calc(50vw - 12pt);\r\n    border-radius:6pt;\r\n`\r\n\r\nconst Recording = props => {\r\n\r\n    let [state, setState] = useState([1, 2, 3, 4])\r\n    let [index, setIndex] = useState(0)\r\n\r\n    let transition = useTransition(state[index], item => item, {\r\n        from: { opcaity: 0, bottom: '-100%', transform: 'scale(1,0)' },\r\n        enter: { opacity: 1, bottom: '0%', transform: 'scale(1,1)' },\r\n        leave: { opacity: 0, bottom: '100%', transform: 'scale(1,0' },\r\n    })\r\n\r\n    return (\r\n        <BasePage style={{ background: 'linear-gradient(90deg, #241034 0%, #1C0638 100%)', padding: 0 }}>\r\n\r\n            <LogControl>\r\n                <div style={{ position: 'relative', width: '100%', height: '100%', boxSizing: 'border-box' }}>\r\n\r\n                    <UndoButton>\r\n                        <FontAwesomeIcon icon={faUndoAlt} />\r\n                    </UndoButton>\r\n\r\n                    <div style={{ position: 'absolute', width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'space-between', top: '58pt', boxSizing: 'border-box', padding: '0 16pt' }}>\r\n\r\n                        <Timer lastUnit='m'>\r\n\r\n                            <div>\r\n                                <p style={{ margin: 0, textTransform: 'uppercase', fontWeight: 'bold', color: 'rgba(0,0,0,.12)', fontSize: '9pt' }}>Recording Time</p>\r\n                                <TimeHolder className='times'>\r\n                                    <div className='mins'><Timer.Minutes /></div>\r\n                                    <div className='auxHolder'>\r\n                                        <div className='sec'><Timer.Seconds /></div>\r\n                                        <p className='minLabel'>min</p>\r\n                                    </div>\r\n                                </TimeHolder>\r\n                            </div>\r\n\r\n                        </Timer>\r\n\r\n                        <RecordButton>\r\n                            <FontAwesomeIcon icon={faStop} />\r\n                        </RecordButton>\r\n                    </div>\r\n\r\n                    <FeedbackBar>\r\n                        <WaitingAnimation>\r\n                            {styles => <Waiting style={styles}></Waiting>}\r\n                        </WaitingAnimation>\r\n                    </FeedbackBar>\r\n                </div>\r\n            </LogControl>\r\n\r\n            <div style={{ marginTop: 'calc(35vh + 24pt)' }}>\r\n                <p style={{ color: 'white', fontSize: '9pt', marginLeft: '24pt' }}>Simple Symptoms</p>\r\n                <SymptomHolder>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Burp</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Fart</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Gurgle</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Heartburn</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n                </SymptomHolder>\r\n            </div>\r\n\r\n            <div style={{ marginTop: '24pt' }}>\r\n                <p style={{ color: 'white', fontSize: '9pt', marginLeft: '24pt' }}>Complex Symptoms</p>\r\n                <SymptomHolder>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Pain</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Bloating</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Twinge</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n\r\n                    <SimpleSymptomButton className='simpleSymptom' >\r\n                        <div>\r\n                            <FontAwesomeIcon className='buttonIcon' icon={faPlusCircle} />\r\n                            <p>Custom</p>\r\n                        </div>\r\n                    </SimpleSymptomButton>\r\n                </SymptomHolder>\r\n            </div>\r\n\r\n        </BasePage >\r\n    )\r\n}\r\n\r\nexport default Recording","import React from 'react';\nimport 'normalize.css'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport styled from 'styled-components'\nimport Welcome from './pages/Welcome';\nimport Login from './pages/Login/Login';\nimport { Menu, MenuButton } from './components/menu';\nimport { connect } from 'react-redux';\nimport CreateAccount from './pages/CreateAccount/CreateAccount';\nimport Context from './pages/Context';\nimport { Food } from './pages/Food/Food';\nimport Recording from './pages/Recording/Recording';\n\n// Root Styling!\nconst RootDiv = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Nunito:400,700&display=swap');\n  font-family: 'Nunito', sans-serif;\n  min-height:100vh\n  min-width:100vw;\n  color:white;\n  background:linear-gradient(90deg, #241034 0%, #1C0638 100%);\n  padding:0;\n  margin:0;\n`\n// The Root page of the app...\n\nfunction App() {\n  return (\n    <Router>\n      <RootDiv className=\"App\">\n        <Menu />\n        <MenuButton color='rgba(0,0,0,.18)'/>\n\n        <Switch>\n          <Route exact path='/'><Welcome /></Route>\n          <Route path='/welcome'><Welcome /></Route>\n          <Route path='/log'><Recording /></Route>\n          <Route path='/login'><Login /></Route>\n          <Route path='/food'><Food /></Route>\n          <Route path='/context'><Context /></Route>\n          <Route path='/newUser'><CreateAccount /></Route>\n        </Switch>\n      \n      </RootDiv>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => ({...state})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux'\r\n\r\nconst defaultReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst appStateReducer = (state={},action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case 'LOGIN':\r\n\r\n            const {details, status} = action.payload\r\n            state = {...state, loggedIn: status, username: status && details.username, firstName: status && details.firstName, lastName: status && details.lastName}\r\n            return state\r\n\r\n        case 'TOGGLE_MENU':\r\n\r\n            state = {...state, menu_open:state.menu_open ? false : true}\r\n            return state \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    default: defaultReducer,\r\n    app_state: appStateReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}